@article{flyvbjerg2006,
  title={Five misunderstandings about case-study research},
  author={Flyvbjerg, Bent},
  journal={Qualitative inquiry},
  volume={12},
  number={2},
  pages={219--245},
  year={2006},
  publisher={Sage publications}
}


@article{howden1978theoretical,
  title={Theoretical and empirical studies of program testing},
  author={Howden, William E},
  journal={IEEE Transactions on Software Engineering},
  number={4},
  pages={293--298},
  year={1978},
  publisher={IEEE}
}


@misc{BaudryARM15,
 title = {{DSpot: Test Amplification for Automatic Assessment of Computational Diversity}},
 howpublished={ArXiv paper 1503.05807},
 author = {Baudry, Benoit and Allier, Simon and Rodriguez-Cancio, Marcelino and Monperrus, Martin},
 url = {https://arxiv.org/pdf/1503.05807.pdf},
 year = {2015},
}

@inproceedings{fraser2012seed,
  title={The seed is strong: Seeding strategies in search-based software testing},
  author={Fraser, Gordon and Arcuri, Andrea},
  booktitle={Software Testing, Verification and Validation (ICST), 2012 IEEE Fifth International Conference on},
  pages={121--130},
  year={2012},
  organization={IEEE}
}


@inproceedings{wu2015deep,
  title={Deep parameter optimisation},
  author={Wu, Fan and Weimer, Westley and Harman, Mark and Jia, Yue and Krinke, Jens},
  booktitle={Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  pages={1375--1382},
  year={2015},
  organization={ACM}
}

@article{fraser2013whole,
  title={Whole test suite generation},
  author={Fraser, Gordon and Arcuri, Andrea},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={2},
  pages={276--291},
  year={2013},
  publisher={IEEE}
}


@inproceedings{godefroid2005dart,
  title={DART: directed automated random testing},
  author={Godefroid, Patrice and Klarlund, Nils and Sen, Koushik},
  booktitle={ACM Sigplan Notices},
  volume={40},
  number={6},
  pages={213--223},
  year={2005},
  organization={ACM}
}

@inproceedings{groce2007randomized,
  title={Randomized differential testing as a prelude to formal verification},
  author={Groce, Alex and Holzmann, Gerard and Joshi, Rajeev},
  booktitle={Proceedings of the 29th international conference on Software Engineering},
  pages={621--631},
  year={2007},
  organization={IEEE Computer Society}
}

@article{fraser2015does,
  title={Does automated unit test generation really help software testers? a controlled empirical study},
  author={Fraser, Gordon and Staats, Matt and McMinn, Phil and Arcuri, Andrea and Padberg, Frank},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={24},
  number={4},
  pages={23},
  year={2015},
  publisher={ACM}
}


@article{demillo1978hints,
  title={Hints on test data selection: Help for the practicing programmer},
  author={DeMillo, Richard A and Lipton, Richard J and Sayward, Frederick G},
  journal={Computer},
  volume={11},
  number={4},
  pages={34--41},
  year={1978},
  publisher={IEEE}
}

@article{Roche2013Devops,
 author = {Roche, James},
 title = {Adopting DevOps Practices in Quality Assurance},
 journal = {Commun. ACM},
 volume = {56},
 year = {2013},
 } 

@Book{beck2003test,
  Title                    = {{Test-driven development: by example}},
  Author                   = {Beck, K.},
  Publisher                = {Addison-Wesley Professional},
  Year                     = {2003}
}


@inproceedings{jia2015genetic,
  title={Genetic improvement using higher order mutation},
  author={Jia, Yue and Wu, Fan and Harman, Mark and Krinke, Jens},
  booktitle={Proceedings of the Companion Publication of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  pages={803--804},
  year={2015},
  organization={ACM}
}

@inproceedings{qi2013efficient,
  title={Efficient automated program repair through fault-recorded testing prioritization},
  author={Qi, Yuhua and Mao, Xiaoguang and Lei, Yan},
  booktitle={Software Maintenance (ICSM), 2013 29th IEEE International Conference on},
  pages={180--189},
  year={2013},
  organization={IEEE}
}

@inproceedings{fast2010designing,
  title={Designing better fitness functions for automated program repair},
  author={Fast, Ethan and Le Goues, Claire and Forrest, Stephanie and Weimer, Westley},
  booktitle={Proceedings of the 12th annual conference on Genetic and evolutionary computation},
  pages={965--972},
  year={2010},
  organization={ACM}
}

@inproceedings{wilkerson2010coevolutionary,
  title={Coevolutionary automated software correction},
  author={Wilkerson, Josh L and Tauritz, Daniel},
  booktitle={Proceedings of the 12th annual conference on Genetic and evolutionary computation},
  pages={1391--1392},
  year={2010},
  organization={ACM}
}

@inproceedings{arcuri2008novel,
  title={A novel co-evolutionary approach to automatic software bug fixing},
  author={Arcuri, Andrea and Yao, Xin},
  booktitle={Evolutionary Computation, 2008. CEC 2008.(IEEE World Congress on Computational Intelligence). IEEE Congress on},
  pages={162--168},
  year={2008},
  organization={IEEE}
}

@inproceedings{kalboussi2013preference,
  title={Preference-based many-objective evolutionary testing generates harder test cases for autonomous agents},
  author={Kalboussi, Sabrine and Bechikh, Slim and Kessentini, Marouane and Said, Lamjed Ben},
  booktitle={International Symposium on Search Based Software Engineering},
  pages={245--250},
  year={2013},
  organization={Springer}
}


@article{petke2017genetic,
  title={Genetic improvement of software: a comprehensive survey},
  author={Petke, Justyna and Haraldsson, Saemundur and Harman, Mark and White, David and Woodward, John and others},
  journal={IEEE Transactions on Evolutionary Computation},
  year={2017},
  publisher={IEEE}
}

@inproceedings{lakhotia2007multi,
  title={A multi-objective approach to search-based test data generation},
  author={Lakhotia, Kiran and Harman, Mark and McMinn, Phil},
  booktitle={Proceedings of the 9th annual conference on Genetic and evolutionary computation},
  pages={1098--1105},
  year={2007},
  organization={ACM}
}



@inproceedings{andrews2005mutation,
  title={Is mutation an appropriate tool for testing experiments?},
  author={Andrews, James H and Briand, Lionel C and Labiche, Yvan},
  booktitle={Proceedings of the 27th international conference on Software engineering},
  pages={402--411},
  year={2005},
  organization={ACM}
}

@inproceedings{Just:2014:MVS:2635868.2635929,
 author = {Just, Ren{\'e} and Jalali, Darioush and Inozemtseva, Laura and Ernst, Michael D. and Holmes, Reid and Fraser, Gordon},
 title = {Are Mutants a Valid Substitute for Real Faults in Software Testing?},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {654--665},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635929},
 doi = {10.1145/2635868.2635929},
 acmid = {2635929},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Test effectiveness, code coverage, mutation analysis, real faults},
} 

@INPROCEEDINGS{7372009,
author={S. Shamshiri and R. Just and J. M. Rojas and G. Fraser and P. McMinn and A. Arcuri},
booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
title={Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges (T)},
year={2015},
pages={201-211},
keywords={Java;automatic test software;fault diagnosis;program testing;Agitar;Defects4J dataset;EvoSuite;Java;Randoop;automated unit test generators;code coverage;execution environment simulation;fault detection;faulty program state propagation;faulty statements;observable output;sensitive assertions;test suites;unit test generation tools;Generators;Java;Manuals;Software;Testing;Writing;automated test generation;empirical study;regression testing;test effectiveness;unit testing},
doi={10.1109/ASE.2015.86},
month={Nov},}

@article{Xuan:2016:BRE:2949070.2949128,
 author = {Xuan, Jifeng and Cornu, Benoit and Martinez, Matias and Baudry, Benoit and Seinturier, Lionel and Monperrus, Martin},
 title = {B-Refactoring},
 journal = {Inf. Softw. Technol.},
 issue_date = {August 2016},
 volume = {76},
 number = {C},
 month = aug,
 year = {2016},
 issn = {0950-5849},
 pages = {65--80},
 numpages = {16},
 url = {http://dx.doi.org/10.1016/j.infsof.2016.04.016},
 doi = {10.1016/j.infsof.2016.04.016},
 acmid = {2949128},
 publisher = {Butterworth-Heinemann},
 address = {Newton, MA, USA},
}

@inproceedings{Xuan:2014:TCP:2635868.2635906,
 author = {Xuan, Jifeng and Monperrus, Martin},
 title = {Test Case Purification for Improving Fault Localization},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {52--63},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635906},
 doi = {10.1145/2635868.2635906},
 acmid = {2635906},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Test case purification, dynamic program slicing, spectrum-based fault localization, test case atomization},
}

@article{Yoo:2012:TDR:2237756.2237758,
 author = {Yoo, S. and Harman, M.},
 title = {Test Data Regeneration: Generating New Test Data from Existing Test Data},
 journal = {Softw. Test. Verif. Reliab.},
 issue_date = {May 2012},
 volume = {22},
 number = {3},
 month = may,
 year = {2012},
 issn = {0960-0833},
 pages = {171--201},
 numpages = {31},
 url = {http://dx.doi.org/10.1002/stvr.435},
 doi = {10.1002/stvr.435},
 acmid = {2237758},
 publisher = {John Wiley and Sons Ltd.},
 address = {Chichester, UK},
 keywords = {search-based software testing, test data generation},
} 

@article{Yoo:2012:RTM:2284811.2284813,
 author = {Yoo, S. and Harman, M.},
 title = {Regression Testing Minimization, Selection and Prioritization: A Survey},
 journal = {Softw. Test. Verif. Reliab.},
 issue_date = {March 2012},
 volume = {22},
 number = {2},
 month = mar,
 year = {2012},
 issn = {0960-0833},
 pages = {67--120},
 numpages = {54},
 url = {http://dx.doi.org/10.1002/stv.430},
 doi = {10.1002/stv.430},
 acmid = {2284813},
 publisher = {John Wiley and Sons Ltd.},
 address = {Chichester, UK},
 keywords = {regression test selection, regression testing, test case prioritization, test suite minimization},
} 

@inproceedings{Gousi13,
  author = {Gousios, Georgios},
  title = {The GHTorrent dataset and tool suite},
  booktitle = {Proceedings of the 10th Working Conference on Mining Software
    Repositories},
  series = {MSR '13},
  year = {2013},
  isbn = {978-1-4673-2936-1},
  location = {San Francisco, CA, USA},
  pages = {233--236},
  numpages = {4},
  url = {http://dl.acm.org/citation.cfm?id=2487085.2487132},
  acmid = {2487132},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
}

@article{pawlak:hal-01169705,
  TITLE = {Spoon: A Library for Implementing Analyses and Transformations of Java Source Code},
  AUTHOR = {Pawlak, Renaud and Monperrus, Martin and Petitprez, Nicolas and Noguera, Carlos and Seinturier, Lionel},
  JOURNAL = {Software: Practice and Experience},
  PUBLISHER = {Wiley-Blackwell},
  PAGES = {1155-1179},
  VOLUME = {46},
  URL = {https://hal.archives-ouvertes.fr/hal-01078532/document},
  YEAR = {2015},
  doi = {10.1002/spe.2346},
  url = {https://hal.archives-ouvertes.fr/hal-01078532/document}
}

@inproceedings{msr17challenge,
 title={TravisTorrent: Synthesizing Travis CI and GitHub for Full-Stack Research on Continuous Integration},
 author={Beller, Moritz and Gousios, Georgios and Zaidman, Andy},
 booktitle={Proceedings of the 14th working conference on mining software repositories},
 preprint={http://www.st.ewi.tudelft.nl/~mbeller/publications/2017_beller_gousios_zaidman_travistorrent_synthesizing_travis_ci_and_github_for_full-stack_research_on_continuous_integration.pdf},
 year={2017}
}

@inproceedings{Pezze:2013:GEI:2510665.2511580,
 author = {Pezzè, Mauro and Rubinov, Konstantin and Wuttke, Jochen},
 title = {Generating Effective Integration Test Cases from Unit Ones},
 booktitle = {Proceedings of the 2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
 series = {ICST '13},
 year = {2013},
 isbn = {978-0-7695-4968-2},
 pages = {11--20},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICST.2013.37},
 doi = {10.1109/ICST.2013.37},
 acmid = {2511580},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {integration testing, automatic test generation},
}

@inproceedings{Niedermayr:2016:MTT:2896941.2896944,
 author = {Niedermayr, Rainer and Juergens, Elmar and Wagner, Stefan},
 title = {Will My Tests Tell Me if I Break This Code?},
 booktitle = {Proceedings of the International Workshop on Continuous Software Evolution and Delivery},
 series = {CSED '16},
 year = {2016},
 isbn = {978-1-4503-4157-8},
 location = {Austin, Texas},
 pages = {23--29},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/2896941.2896944},
 doi = {10.1145/2896941.2896944},
 acmid = {2896944},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code coverage, mutation testing, regression testing, test suite effectiveness},
} 

@inproceedings{Zhang:2016:IRT:2950290.2950313,
 author = {Zhang, Jie and Lou, Yiling and Zhang, Lingming and Hao, Dan and Zhang, Lu and Mei, Hong},
 title = {Isomorphic Regression Testing: Executing Uncovered Branches Without Test Augmentation},
 booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2016},
 year = {2016},
 isbn = {978-1-4503-4218-6},
 location = {Seattle, WA, USA},
 pages = {883--894},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2950290.2950313},
 doi = {10.1145/2950290.2950313},
 acmid = {2950313},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {branch negation, regression testing, software testing},
} 


@article{evosuite:emse14_mutation,
   year={2014},
   journal={Empirical Software Engineering},
   title={Achieving Scalable Mutation-based Generation of Whole Test Suites},
   publisher={Springer US},
   author={Fraser, Gordon and Arcuri, Andrea},
   language={English},
   volume={20},
   number={3},
   pages={783--812},
}

@article{danglot2017emerging,
  title={The Emerging Field of Test Amplification: A Survey},
  author={Danglot, Benjamin and Vera-Perez, Oscar and Yu, Zhongxing and Monperrus, Martin and Baudry, Benoit},
  journal={arXiv preprint arXiv:1705.10692},
  year={2017}
}


@article{mcminn2004survey,
  title={Search-based software test data generation: a survey},
  author={McMinn, Phil},
  journal={Software testing, Verification and reliability},
  volume={14},
  number={2},
  pages={105--156},
  year={2004},
  publisher={Wiley Online Library}
}


@article{survey_oracle_tse,
 author = {Barr, E.T. and Harman, M. and McMinn, P. and Shahbaz, M. and Yoo, S.},
 journal = {IEEE Transactions on Software Engineering},
 title = {{The Oracle Problem in Software Testing: a Survey}},
 year = {2015},
 volume = {41},
 number = {5},
 pages = {507-525},
}


@article{Baudry05a,
	Author = {Baudry, Benoit and Fleurey, Franck and J\'ez\'equel, Jean-Marc and {Le~Traon} Yves},
	Journal = {Software, Testing, Verification \& Reliability journal {(STVR)}},
	Month = jun,
	Number = {2},
	Pages = {73-96},
	Title = {From Genetic to Bacteriological Algorithms for Mutation-Based Testing},
	url = {http://www.irisa.fr/triskell/publis/2005/Baudry05a.pdf},
	Volume = {15},
	Year = {2005},
}

@article{Baudry05d,
	keywords = {test, OOP, search-based},
	Author = {Baudry, Benoit and Fleurey, Franck and J\'ez\'equel, Jean-Marc and {Le~Traon}, Yves},
	Journal = {IEEE Software},
	Month = mar,
	Number = {2},
	Pages = {76--82},
	Title = {Automatic Test Cases Optimization: a Bacteriologic Algorithm},
	url = {http://www.irisa.fr/triskell/publis/2005/Baudry05d.pdf},
	Volume = {22},
	x-abbrv = {Software},
	X-Editorial-Board = {yes},
	X-International-Audience = {yes},
	X-Language = {EN},
	Year = {2005},
	Bdsk-Url-1 = {http://www.irisa.fr/triskell/publis/2005/Baudry05d.pdf}
}

@article{smith2009guiding,
  title={On guiding the augmentation of an automated test suite via mutation analysis},
  author={Smith, Ben H and Williams, Laurie},
  journal={Empirical Software Engineering},
  volume={14},
  number={3},
  pages={341--369},
  year={2009},
  publisher={Springer},
  url={https://repository.lib.ncsu.edu/bitstream/handle/1840.4/1967/TR-2008-9.pdf?sequence=1}
}

@INPROCEEDINGS{multiple-mutants,
author={M. h. Liu and Y. f. Gao and J. h. Shan and J. h. Liu and L. Zhang and J. s. Sun},
booktitle={2006 22nd IEEE International Conference on Software Maintenance},
title={An Approach to Test Data Generation for Killing Multiple Mutants},
year={2006},
pages={113-122},
keywords={program testing;software quality;adequacy criterion;mutation testing;software quality assurance;software testing;test data generation;unit testing;Automatic testing;Computer science;Costs;Data engineering;Electronic equipment testing;Genetic mutations;Power engineering and energy;Software quality;Software testing;Sun;adequacy criterion;generation;mutation testing;test data;unit testing},
doi={10.1109/ICSM.2006.13},
ISSN={1063-6773},
month={Sept},
}

@inproceedings{Xie2006,
 author = {Xie, Tao},
 title = {{Augmenting Automatically Generated Unit-test Suites with Regression Oracle Checking}},
 booktitle = {Proceedings of the 20th European Conference on Object-Oriented Programming},
 year = {2006},
 pages = {380--403},
 } 

@inproceedings{Andrews:2005:MAT:1062455.1062530,
 author = {Andrews, J. H. and Briand, L. C. and Labiche, Y.},
 title = {Is Mutation an Appropriate Tool for Testing Experiments?},
 booktitle = {Proceedings of the 27th International Conference on Software Engineering},
 series = {ICSE '05},
 year = {2005},
 isbn = {1-58113-963-2},
 location = {St. Louis, MO, USA},
 pages = {402--411},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1062455.1062530},
 doi = {10.1145/1062455.1062530},
 acmid = {1062530},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {hand-seeded faults, mutants, real faults},
} 


@inproceedings{Harder03,
 author = {Harder, Michael and Mellen, Jeff and Ernst, Michael D.},
 title = {Improving Test Suites via Operational Abstraction},
 booktitle = {Proc. of the Int. Conf. on Software Engineering (ICSE)},
 year = {2003},
 pages = {60--71},
} 

@inproceedings{milani2014,
  title={Leveraging existing tests in automated test generation for web applications},
  author={Milani Fard, Amin and Mirzaaghaei, Mehdi and Mesbah, Ali},
  booktitle={Proceedings of the 29th ACM/IEEE international conference on Automated software engineering},
  pages={67--78},
  year={2014},
  organization={ACM}
}

@inproceedings{robetaler2012isolating,
  title={Isolating failure causes through test case generation},
  author={R{\"o}$\beta$ler, Jeremias and Fraser, Gordon and Zeller, Andreas and Orso, Alessandro},
  booktitle={Proceedings of the 2012 International Symposium on Software Testing and Analysis},
  pages={309--319},
  year={2012},
  organization={ACM}
}

@article{Yu2013,
 author = {Yu, Zhongxing and Bai, Chenggang and Cai, Kai-Yuan},
 title = {{Mutation-oriented Test Data Augmentation for GUI Software Fault Localization}},
 journal = {Inf. Softw. Technol.},
 issue_date = {December, 2013},
 volume = {55},
 number = {12},
 month = dec,
 year = {2013},
 issn = {0950-5849},
 pages = {2076--2098},
 numpages = {23},
 }

@inproceedings{Xuan:2015:CRV:2786805.2803206,
 author = {Xuan, Jifeng and Xie, Xiaoyuan and Monperrus, Martin},
 title = {{Crash Reproduction via Test Case Mutation: Let Existing Test Cases Help}},
 booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
 series = {ESEC/FSE 2015},
 year = {2015},
 isbn = {978-1-4503-3675-8},
 location = {Bergamo, Italy},
 pages = {910--913},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/2786805.2803206},
 doi = {10.1145/2786805.2803206},
 acmid = {2803206},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Crash reproduction, stack trace, test case mutation},
} 

@misc{history_agile,
  author = {Peter Varhol},
  title = {To agility and beyond: The history—and legacy—of agile development},
  url = {https://techbeacon.com/agility-beyond-history%E2%80%94-legacy%E2%80%94-agile-development},
}

@misc{V-model,
  author = {Wikipedia},
  title = {V-Model (software development)},
  url = {https://en.wikipedia.org/wiki/V-Model_(software_development)},
}

@inproceedings{tonella,
 author = {Tonella, Paolo},
 title = {Evolutionary Testing of Classes},
 booktitle = {Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis},
 series = {ISSTA '04},
 year = {2004},
 isbn = {1-58113-820-2},
 location = {Boston, Massachusetts, USA},
 pages = {119--128},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1007512.1007528},
 doi = {10.1145/1007512.1007528},
 acmid = {1007528},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated test case generation, genetic algorithms, object-oriented testing},
} 

@InProceedings{TaoXie2006,
    author="Xie, Tao",
    editor="Thomas, Dave",
    title="Augmenting Automatically Generated Unit-Test Suites with Regression Oracle Checking",
    booktitle="ECOOP 2006 -- Object-Oriented Programming",
    year="2006",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="380--403",
    abstract="A test case consists of two parts: a test input to exercise the program under test and a test oracle to check the correctness of the test execution. A test oracle is often in the form of executable assertions such as in the JUnit testing framework. Manually generated test cases are valuable in exposing program faults in the current program version or regression faults in future program versions. However, manually generated test cases are often insufficient for assuring high software quality. We can then use an existing test-generation tool to generate new test inputs to augment the existing test suite. However, without specifications these automatically generated test inputs often do not have test oracles for exposing faults. In this paper, we have developed an automatic approach and its supporting tool, called Orstra, for augmenting an automatically generated unit-test suite with regression oracle checking. The augmented test suite has an improved capability of guarding against regression faults. In our new approach, Orstra first executes the test suite and collects the class under test's object states exercised by the test suite. On collected object states, Orstra creates assertions for asserting behavior of the object states. On executed observer methods (public methods with non-void returns), Orstra also creates assertions for asserting their return values. Then later when the class is changed, the augmented test suite is executed to check whether assertion violations are reported. We have evaluated Orstra on augmenting automatically generated tests for eleven subjects taken from a variety of sources. The experimental results show that an automatically generated test suite's fault-detection capability can be effectively improved after being augmented by Orstra.",
    isbn="978-3-540-35727-8"
}

@INPROCEEDINGS{IndustrialEvalAlmasi2017, 
author={M. M. Almasi and H. Hemmati and G. Fraser and A. Arcuri and J. Benefelds}, 
booktitle={2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP)}, 
title={An Industrial Evaluation of Unit Test Generation: Finding Real Faults in a Financial Application}, 
year={2017}, 
volume={}, 
number={}, 
pages={263-272}, 
keywords={Java;fault diagnosis;insurance data processing;pensions;program testing;software reliability;software tools;EVOSUITE;Java;RANDOOP;automated unit test generation;complex state object configuration;fault classification;fault detection;fault-finding effectiveness;feedback-directed random test generation;financial application;industrial evaluation;life insurance;open source systems;pension products calculator engine;search-based test generation;software project;technology transfer;test generation tools;Java;Pensions;Prototypes;Software;Software engineering;Testing;Tools;Automated Tests Generation;Empirical Software Engineering;Random Testing;Search-based Testing}, 
doi={10.1109/ICSE-SEIP.2017.27}, 
ISSN={}, 
month={May},}

@inproceedings{Just:2014:MVS:2635868.2635929,
 author = {Just, Ren{\'e} and Jalali, Darioush and Inozemtseva, Laura and Ernst, Michael D. and Holmes, Reid and Fraser, Gordon},
 title = {Are Mutants a Valid Substitute for Real Faults in Software Testing?},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {654--665},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635929},
 doi = {10.1145/2635868.2635929},
 acmid = {2635929},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Test effectiveness, code coverage, mutation analysis, real faults},
} 

@inproceedings{pull:request:evaluation,
 author = {Allamanis, Miltiadis and Barr, Earl T. and Bird, Christian and Sutton, Charles},
 title = {Learning Natural Coding Conventions},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {281--293},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2635868.2635883},
 doi = {10.1145/2635868.2635883},
 acmid = {2635883},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coding conventions, naturalness of software},
} 
