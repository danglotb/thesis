@article{flyvbjerg2006,
  title={Five misunderstandings about case-study research},
  author={Flyvbjerg, Bent},
  journal={Qualitative inquiry},
  volume={12},
  number={2},
  pages={219--245},
  year={2006},
  publisher={Sage publications}
}

@article{howden1978theoretical,
  title={Theoretical and empirical studies of program testing},
  author={Howden, William E},
  journal={IEEE Transactions on Software Engineering},
  number={4},
  pages={293--298},
  year={1978},
  publisher={IEEE}
}


@misc{BaudryARM15,
 title = {{DSpot: Test Amplification for Automatic Assessment of Computational Diversity}},
 howpublished={ArXiv paper 1503.05807},
 author = {Baudry, Benoit and Allier, Simon and Rodriguez-Cancio, Marcelino and Monperrus, Martin},
 url = {https://arxiv.org/pdf/1503.05807.pdf},
 year = {2015},
}

@inproceedings{fraser2012seed,
  title={The seed is strong: Seeding strategies in search-based software testing},
  author={Fraser, Gordon and Arcuri, Andrea},
  booktitle={Software Testing, Verification and Validation (ICST), 2012 IEEE Fifth International Conference on},
  pages={121--130},
  year={2012},
  organization={IEEE}
}


@inproceedings{wu2015deep,
  title={Deep parameter optimisation},
  author={Wu, Fan and Weimer, Westley and Harman, Mark and Jia, Yue and Krinke, Jens},
  booktitle={Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  pages={1375--1382},
  year={2015},
  organization={ACM}
}

@article{fraser2013whole,
  title={Whole test suite generation},
  author={Fraser, Gordon and Arcuri, Andrea},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={2},
  pages={276--291},
  year={2013},
  publisher={IEEE}
}


@inproceedings{godefroid2005dart,
  title={DART: directed automated random testing},
  author={Godefroid, Patrice and Klarlund, Nils and Sen, Koushik},
  booktitle={ACM Sigplan Notices},
  volume={40},
  number={6},
  pages={213--223},
  year={2005},
  organization={ACM}
}

@inproceedings{groce2007randomized,
  title={Randomized differential testing as a prelude to formal verification},
  author={Groce, Alex and Holzmann, Gerard and Joshi, Rajeev},
  booktitle={Proceedings of the 29th international conference on Software Engineering},
  pages={621--631},
  year={2007},
  organization={IEEE Computer Society}
}

@article{fraser2015does,
  title={Does automated unit test generation really help software testers? a controlled empirical study},
  author={Fraser, Gordon and Staats, Matt and McMinn, Phil and Arcuri, Andrea and Padberg, Frank},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={24},
  number={4},
  pages={23},
  year={2015},
  publisher={ACM}
}


@article{demillo1978hints,
  title={Hints on test data selection: Help for the practicing programmer},
  author={DeMillo, Richard A and Lipton, Richard J and Sayward, Frederick G},
  journal={Computer},
  volume={11},
  number={4},
  pages={34--41},
  year={1978},
  publisher={IEEE}
}

@article{Roche2013Devops,
 author = {Roche, James},
 title = {Adopting DevOps Practices in Quality Assurance},
 journal = {Commun. ACM},
 volume = {56},
 year = {2013},
 } 

@Book{beck2003test,
  Title                    = {{Test-driven development: by example}},
  Author                   = {Beck, K.},
  Publisher                = {Addison-Wesley Professional},
  Year                     = {2003}
}

@article{DijkstraLecture1989,
	author = {Edsger Dijkstra},
	year = {1989},
	month = {01},
	pages = {},
	title = {On the cruelty of really teaching computing science},
	volume = {32},
	journal = {Communications of The ACM - CACM}
}

@inproceedings{jia2015genetic,
  title={Genetic improvement using higher order mutation},
  author={Jia, Yue and Wu, Fan and Harman, Mark and Krinke, Jens},
  booktitle={Proceedings of the Companion Publication of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  pages={803--804},
  year={2015},
  organization={ACM}
}

@inproceedings{qi2013efficient,
  title={Efficient automated program repair through fault-recorded testing prioritization},
  author={Qi, Yuhua and Mao, Xiaoguang and Lei, Yan},
  booktitle={Software Maintenance (ICSM), 2013 29th IEEE International Conference on},
  pages={180--189},
  year={2013},
  organization={IEEE}
}

@inproceedings{fast2010designing,
  title={Designing better fitness functions for automated program repair},
  author={Fast, Ethan and Le Goues, Claire and Forrest, Stephanie and Weimer, Westley},
  booktitle={Proceedings of the 12th annual conference on Genetic and evolutionary computation},
  pages={965--972},
  year={2010},
  organization={ACM}
}

@inproceedings{wilkerson2010coevolutionary,
  title={Coevolutionary automated software correction},
  author={Wilkerson, Josh L and Tauritz, Daniel},
  booktitle={Proceedings of the 12th annual conference on Genetic and evolutionary computation},
  pages={1391--1392},
  year={2010},
  organization={ACM}
}

@inproceedings{arcuri2008novel,
  title={A novel co-evolutionary approach to automatic software bug fixing},
  author={Arcuri, Andrea and Yao, Xin},
  booktitle={Evolutionary Computation, 2008. CEC 2008.(IEEE World Congress on Computational Intelligence). IEEE Congress on},
  pages={162--168},
  year={2008},
  organization={IEEE}
}

@inproceedings{kalboussi2013preference,
  title={Preference-based many-objective evolutionary testing generates harder test cases for autonomous agents},
  author={Kalboussi, Sabrine and Bechikh, Slim and Kessentini, Marouane and Said, Lamjed Ben},
  booktitle={International Symposium on Search Based Software Engineering},
  pages={245--250},
  year={2013},
  organization={Springer}
}


@article{petke2017genetic,
  title={Genetic improvement of software: a comprehensive survey},
  author={Petke, Justyna and Haraldsson, Saemundur and Harman, Mark and White, David and Woodward, John and others},
  journal={IEEE Transactions on Evolutionary Computation},
  year={2017},
  publisher={IEEE}
}

@inproceedings{lakhotia2007multi,
  title={A multi-objective approach to search-based test data generation},
  author={Lakhotia, Kiran and Harman, Mark and McMinn, Phil},
  booktitle={Proceedings of the 9th annual conference on Genetic and evolutionary computation},
  pages={1098--1105},
  year={2007},
  organization={ACM}
}



@inproceedings{andrews2005mutation,
  title={Is mutation an appropriate tool for testing experiments?},
  author={Andrews, James H and Briand, Lionel C and Labiche, Yvan},
  booktitle={Proceedings of the 27th international conference on Software engineering},
  pages={402--411},
  year={2005},
  organization={ACM}
}

@inproceedings{Just:2014:MVS:2635868.2635929,
 author = {Just, Ren{\'e} and Jalali, Darioush and Inozemtseva, Laura and Ernst, Michael D. and Holmes, Reid and Fraser, Gordon},
 title = {Are Mutants a Valid Substitute for Real Faults in Software Testing?},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {654--665},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635929},
 doi = {10.1145/2635868.2635929},
 acmid = {2635929},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Test effectiveness, code coverage, mutation analysis, real faults},
} 

@INPROCEEDINGS{7372009,
author={S. Shamshiri and R. Just and J. M. Rojas and G. Fraser and P. McMinn and A. Arcuri},
booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
title={Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges (T)},
year={2015},
pages={201-211},
keywords={Java;automatic test software;fault diagnosis;program testing;Agitar;Defects4J dataset;;Java;Randoop;automated unit test generators;code coverage;execution environment simulation;fault detection;faulty program state propagation;faulty statements;observable output;sensitive assertions;test suites;unit test generation tools;Generators;Java;Manuals;Software;Testing;Writing;automated test generation;empirical study;regression testing;test effectiveness;unit testing},
doi={10.1109/ASE.2015.86},
month={Nov},}

@article{Xuan:2016:BRE:2949070.2949128,
 author = {Xuan, Jifeng and Cornu, Benoit and Martinez, Matias and Baudry, Benoit and Seinturier, Lionel and Monperrus, Martin},
 title = {B-Refactoring},
 journal = {Inf. Softw. Technol.},
 issue_date = {August 2016},
 volume = {76},
 number = {C},
 month = aug,
 year = {2016},
 issn = {0950-5849},
 pages = {65--80},
 numpages = {16},
 url = {http://dx.doi.org/10.1016/j.infsof.2016.04.016},
 doi = {10.1016/j.infsof.2016.04.016},
 acmid = {2949128},
 publisher = {Butterworth-Heinemann},
 address = {Newton, MA, USA},
}

@inproceedings{Xuan:2014:TCP:2635868.2635906,
 author = {Xuan, Jifeng and Monperrus, Martin},
 title = {Test Case Purification for Improving Fault Localization},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {52--63},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635906},
 doi = {10.1145/2635868.2635906},
 acmid = {2635906},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Test case purification, dynamic program slicing, spectrum-based fault localization, test case atomization},
}

@article{Yoo:2012:TDR:2237756.2237758,
 author = {Yoo, S. and Harman, M.},
 title = {Test Data Regeneration: Generating New Test Data from Existing Test Data},
 journal = {Softw. Test. Verif. Reliab.},
 issue_date = {May 2012},
 volume = {22},
 number = {3},
 month = may,
 year = {2012},
 issn = {0960-0833},
 pages = {171--201},
 numpages = {31},
 url = {http://dx.doi.org/10.1002/stvr.435},
 doi = {10.1002/stvr.435},
 acmid = {2237758},
 publisher = {John Wiley and Sons Ltd.},
 address = {Chichester, UK},
 keywords = {search-based software testing, test data generation},
} 

@article{Yoo:2012:RTM:2284811.2284813,
 author = {Yoo, S. and Harman, M.},
 title = {Regression Testing Minimization, Selection and Prioritization: A Survey},
 journal = {Softw. Test. Verif. Reliab.},
 issue_date = {March 2012},
 volume = {22},
 number = {2},
 month = mar,
 year = {2012},
 issn = {0960-0833},
 pages = {67--120},
 numpages = {54},
 url = {http://dx.doi.org/10.1002/stv.430},
 doi = {10.1002/stv.430},
 acmid = {2284813},
 publisher = {John Wiley and Sons Ltd.},
 address = {Chichester, UK},
 keywords = {regression test selection, regression testing, test case prioritization, test suite minimization},
} 

@inproceedings{Gousi13,
  author = {Gousios, Georgios},
  title = {The GHTorrent dataset and tool suite},
  booktitle = {Proceedings of the 10th Working Conference on Mining Software
    Repositories},
  series = {MSR '13},
  year = {2013},
  isbn = {978-1-4673-2936-1},
  location = {San Francisco, CA, USA},
  pages = {233--236},
  numpages = {4},
  url = {http://dl.acm.org/citation.cfm?id=2487085.2487132},
  acmid = {2487132},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
}

@article{pawlak:hal-01169705,
  TITLE = {Spoon: A Library for Implementing Analyses and Transformations of Java Source Code},
  AUTHOR = {Pawlak, Renaud and Monperrus, Martin and Petitprez, Nicolas and Noguera, Carlos and Seinturier, Lionel},
  JOURNAL = {Software: Practice and Experience},
  PUBLISHER = {Wiley-Blackwell},
  PAGES = {1155-1179},
  VOLUME = {46},
  URL = {https://hal.archives-ouvertes.fr/hal-01078532/document},
  YEAR = {2015},
  doi = {10.1002/spe.2346},
  url = {https://hal.archives-ouvertes.fr/hal-01078532/document}
}

@inproceedings{msr17challenge,
 title={TravisTorrent: Synthesizing Travis CI and GitHub for Full-Stack Research on Continuous Integration},
 author={Beller, Moritz and Gousios, Georgios and Zaidman, Andy},
 booktitle={Proceedings of the 14th working conference on mining software repositories},
 preprint={http://www.st.ewi.tudelft.nl/~mbeller/publications/2017_beller_gousios_zaidman_travistorrent_synthesizing_travis_ci_and_github_for_full-stack_research_on_continuous_integration.pdf},
 year={2017}
}

@inproceedings{Pezze:2013:GEI:2510665.2511580,
 author = {Pezzè, Mauro and Rubinov, Konstantin and Wuttke, Jochen},
 title = {Generating Effective Integration Test Cases from Unit Ones},
 booktitle = {Proceedings of the 2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
 series = {ICST '13},
 year = {2013},
 isbn = {978-0-7695-4968-2},
 pages = {11--20},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICST.2013.37},
 doi = {10.1109/ICST.2013.37},
 acmid = {2511580},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {integration testing, automatic test generation},
}

@inproceedings{Niedermayr:2016:MTT:2896941.2896944,
 author = {Niedermayr, Rainer and Juergens, Elmar and Wagner, Stefan},
 title = {Will My Tests Tell Me if I Break This Code?},
 booktitle = {Proceedings of the International Workshop on Continuous Software Evolution and Delivery},
 series = {CSED '16},
 year = {2016},
 isbn = {978-1-4503-4157-8},
 location = {Austin, Texas},
 pages = {23--29},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/2896941.2896944},
 doi = {10.1145/2896941.2896944},
 acmid = {2896944},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code coverage, mutation testing, regression testing, test suite effectiveness},
} 

@inproceedings{Zhang:2016:IRT:2950290.2950313,
 author = {Zhang, Jie and Lou, Yiling and Zhang, Lingming and Hao, Dan and Zhang, Lu and Mei, Hong},
 title = {Isomorphic Regression Testing: Executing Uncovered Branches Without Test Augmentation},
 booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2016},
 year = {2016},
 isbn = {978-1-4503-4218-6},
 location = {Seattle, WA, USA},
 pages = {883--894},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2950290.2950313},
 doi = {10.1145/2950290.2950313},
 acmid = {2950313},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {branch negation, regression testing, software testing},
} 

@inproceedings{ESECFSE11,
	author = {Fraser, Gordon and Arcuri, Andrea},
	title = {EvoSuite: automatic test suite generation for object-oriented software},
	booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
	series = {ESEC/FSE '11},
	year = {2011},
	isbn = {978-1-4503-0443-6},
	location = {Szeged, Hungary},
	pages = {416--419},
	numpages = {4},
	url = {http://doi.acm.org/10.1145/2025113.2025179},
	doi = {10.1145/2025113.2025179},
	acmid = {2025179},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {assertion generation, search based soft- ware testing, test case generation},
}

@article{evosuite:emse14_mutation,
   year={2014},
   journal={Empirical Software Engineering},
   title={Achieving Scalable Mutation-based Generation of Whole Test Suites},
   publisher={Springer US},
   author={Fraser, Gordon and Arcuri, Andrea},
   language={English},
   volume={20},
   number={3},
   pages={783--812},
}

@article{mcminn2004survey,
  title={Search-based software test data generation: a survey},
  author={McMinn, Phil},
  journal={Software testing, Verification and reliability},
  volume={14},
  number={2},
  pages={105--156},
  year={2004},
  publisher={Wiley Online Library}
}


@article{survey_oracle_tse,
 author = {Barr, E.T. and Harman, M. and McMinn, P. and Shahbaz, M. and Yoo, S.},
 journal = {IEEE Transactions on Software Engineering},
 title = {{The Oracle Problem in Software Testing: a Survey}},
 year = {2015},
 volume = {41},
 number = {5},
 pages = {507-525},
}


@article{Baudry05a,
	Author = {Baudry, Benoit and Fleurey, Franck and J\'ez\'equel, Jean-Marc and {Le~Traon} Yves},
	Journal = {Software, Testing, Verification \& Reliability journal {(STVR)}},
	Month = jun,
	Number = {2},
	Pages = {73-96},
	Title = {From Genetic to Bacteriological Algorithms for Mutation-Based Testing},
	url = {http://www.irisa.fr/triskell/publis/2005/Baudry05a.pdf},
	Volume = {15},
	Year = {2005},
}

@article{Baudry05d,
	keywords = {test, OOP, search-based},
	Author = {Baudry, Benoit and Fleurey, Franck and J\'ez\'equel, Jean-Marc and {Le~Traon}, Yves},
	Journal = {IEEE Software},
	Month = mar,
	Number = {2},
	Pages = {76--82},
	Title = {Automatic Test Cases Optimization: a Bacteriologic Algorithm},
	url = {http://www.irisa.fr/triskell/publis/2005/Baudry05d.pdf},
	Volume = {22},
	x-abbrv = {Software},
	X-Editorial-Board = {yes},
	X-International-Audience = {yes},
	X-Language = {EN},
	Year = {2005},
	Bdsk-Url-1 = {http://www.irisa.fr/triskell/publis/2005/Baudry05d.pdf}
}

@article{smith2009guiding,
  title={On guiding the augmentation of an automated test suite via mutation analysis},
  author={Smith, Ben H and Williams, Laurie},
  journal={Empirical Software Engineering},
  volume={14},
  number={3},
  pages={341--369},
  year={2009},
  publisher={Springer},
  url={https://repository.lib.ncsu.edu/bitstream/handle/1840.4/1967/TR-2008-9.pdf?sequence=1}
}

@INPROCEEDINGS{multiple-mutants,
author={M. h. Liu and Y. f. Gao and J. h. Shan and J. h. Liu and L. Zhang and J. s. Sun},
booktitle={2006 22nd IEEE International Conference on Software Maintenance},
title={An Approach to Test Data Generation for Killing Multiple Mutants},
year={2006},
pages={113-122},
keywords={program testing;software quality;adequacy criterion;mutation testing;software quality assurance;software testing;test data generation;unit testing;Automatic testing;Computer science;Costs;Data engineering;Electronic equipment testing;Genetic mutations;Power engineering and energy;Software quality;Software testing;Sun;adequacy criterion;generation;mutation testing;test data;unit testing},
doi={10.1109/ICSM.2006.13},
ISSN={1063-6773},
month={Sept},
}

@inproceedings{Xie2006,
 author = {Xie, Tao},
 title = {{Augmenting Automatically Generated Unit-test Suites with Regression Oracle Checking}},
 booktitle = {Proceedings of the 20th European Conference on Object-Oriented Programming},
 year = {2006},
 pages = {380--403},
 } 

@inproceedings{Andrews:2005:MAT:1062455.1062530,
 author = {Andrews, J. H. and Briand, L. C. and Labiche, Y.},
 title = {Is Mutation an Appropriate Tool for Testing Experiments?},
 booktitle = {Proceedings of the 27th International Conference on Software Engineering},
 series = {ICSE '05},
 year = {2005},
 isbn = {1-58113-963-2},
 location = {St. Louis, MO, USA},
 pages = {402--411},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1062455.1062530},
 doi = {10.1145/1062455.1062530},
 acmid = {1062530},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {hand-seeded faults, mutants, real faults},
} 


@inproceedings{Harder03,
 author = {Harder, Michael and Mellen, Jeff and Ernst, Michael D.},
 title = {Improving Test Suites via Operational Abstraction},
 booktitle = {Proc. of the Int. Conf. on Software Engineering (ICSE)},
 year = {2003},
 pages = {60--71},
} 

@inproceedings{milani2014,
  title={Leveraging existing tests in automated test generation for web applications},
  author={Milani Fard, Amin and Mirzaaghaei, Mehdi and Mesbah, Ali},
  booktitle={Proceedings of the 29th ACM/IEEE international conference on Automated software engineering},
  pages={67--78},
  year={2014},
  organization={ACM}
}

@inproceedings{robetaler2012isolating,
  title={Isolating failure causes through test case generation},
  author={R{\"o}$\beta$ler, Jeremias and Fraser, Gordon and Zeller, Andreas and Orso, Alessandro},
  booktitle={Proceedings of the 2012 International Symposium on Software Testing and Analysis},
  pages={309--319},
  year={2012},
  organization={ACM}
}

@article{Yu2013,
 author = {Yu, Zhongxing and Bai, Chenggang and Cai, Kai-Yuan},
 title = {{Mutation-oriented Test Data Augmentation for GUI Software Fault Localization}},
 journal = {Inf. Softw. Technol.},
 issue_date = {December, 2013},
 volume = {55},
 number = {12},
 month = dec,
 year = {2013},
 issn = {0950-5849},
 pages = {2076--2098},
 numpages = {23},
 }

@inproceedings{Xuan:2015:CRV:2786805.2803206,
 author = {Xuan, Jifeng and Xie, Xiaoyuan and Monperrus, Martin},
 title = {{Crash Reproduction via Test Case Mutation: Let Existing Test Cases Help}},
 booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
 series = {ESEC/FSE 2015},
 year = {2015},
 isbn = {978-1-4503-3675-8},
 location = {Bergamo, Italy},
 pages = {910--913},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/2786805.2803206},
 doi = {10.1145/2786805.2803206},
 acmid = {2803206},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Crash reproduction, stack trace, test case mutation},
} 

@misc{history_agile,
  author = {Peter Varhol},
  title = {To agility and beyond: The history—and legacy—of agile development},
  url = {https://techbeacon.com/agility-beyond-history%E2%80%94-legacy%E2%80%94-agile-development},
}

@misc{V-model,
  author = {Wikipedia},
  title = {V-Model (software development)},
  url = {https://en.wikipedia.org/wiki/V-Model_(software_development)},
}

@inproceedings{tonella,
 author = {Tonella, Paolo},
 title = {Evolutionary Testing of Classes},
 booktitle = {Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis},
 series = {ISSTA '04},
 year = {2004},
 isbn = {1-58113-820-2},
 location = {Boston, Massachusetts, USA},
 pages = {119--128},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1007512.1007528},
 doi = {10.1145/1007512.1007528},
 acmid = {1007528},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated test case generation, genetic algorithms, object-oriented testing},
} 

@INPROCEEDINGS{IndustrialEvalAlmasi2017, 
author={M. M. Almasi and H. Hemmati and G. Fraser and A. Arcuri and J. Benefelds}, 
booktitle={2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP)}, 
title={An Industrial Evaluation of Unit Test Generation: Finding Real Faults in a Financial Application}, 
year={2017}, 
volume={}, 
number={}, 
pages={263-272}, 
keywords={Java;fault diagnosis;insurance data processing;pensions;program testing;software reliability;software tools;EVOSUITE;Java;RANDOOP;automated unit test generation;complex state object configuration;fault classification;fault detection;fault-finding effectiveness;feedback-directed random test generation;financial application;industrial evaluation;life insurance;open source systems;pension products calculator engine;search-based test generation;software project;technology transfer;test generation tools;Java;Pensions;Prototypes;Software;Software engineering;Testing;Tools;Automated Tests Generation;Empirical Software Engineering;Random Testing;Search-based Testing}, 
doi={10.1109/ICSE-SEIP.2017.27}, 
ISSN={}, 
month={May},}

@inproceedings{Just:2014:MVS:2635868.2635929,
 author = {Just, Ren{\'e} and Jalali, Darioush and Inozemtseva, Laura and Ernst, Michael D. and Holmes, Reid and Fraser, Gordon},
 title = {Are Mutants a Valid Substitute for Real Faults in Software Testing?},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {654--665},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635929},
 doi = {10.1145/2635868.2635929},
 acmid = {2635929},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Test effectiveness, code coverage, mutation analysis, real faults},
}

@inproceedings{pull:request:evaluation,
 author = {Allamanis, Miltiadis and Barr, Earl T. and Bird, Christian and Sutton, Charles},
 title = {Learning Natural Coding Conventions},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {281--293},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2635868.2635883},
 doi = {10.1145/2635868.2635883},
 acmid = {2635883},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coding conventions, naturalness of software},
} 




































@inproceedings{JBSE,
	author = {Braione, Pietro and Denaro, Giovanni and Pezz\`{e}, Mauro},
	title = {JBSE: A Symbolic Executor for Java Programs with Complex Heap Inputs},
	booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
	series = {FSE 2016},
	year = {2016},
	isbn = {978-1-4503-4218-6},
	location = {Seattle, WA, USA},
	pages = {1018--1022},
	numpages = {5},
	url = {http://doi.acm.org/10.1145/2950290.2983940},
	doi = {10.1145/2950290.2983940},
	acmid = {2983940},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Alloy, Heap Exploration Logic, Heap data structures, Pointer Assertion Logic, RepOk, Symbolic Execution},
}

@inproceedings{Taneja:2008:DAR:1642931.1642986,
	author = {Taneja, K. and Tao Xie},
	title = {DiffGen: Automated Regression Unit-Test Generation},
	booktitle = {Proceedings of the 2008 23rd IEEE/ACM International Conference on Automated Software Engineering},
	series = {ASE '08},
	year = {2008},
	isbn = {978-1-4244-2187-9},
	pages = {407--410},
	numpages = {4},
	url = {http://dx.doi.org/10.1109/ASE.2008.60},
	doi = {10.1109/ASE.2008.60},
	acmid = {1642986},
	publisher = {IEEE Computer Society},
	address = {Washington, DC, USA},
	keywords = {coverage-based test generation tool, software program maintenance, DiffGen automated regression unit-test generation, software development, Java program checking},
} 

@inproceedings{godefroid2005dart,
	title={DART: directed automated random testing},
	author={Godefroid, Patrice and Klarlund, Nils and Sen, Koushik},
	booktitle={ACM Sigplan Notices},
	volume={40},
	number={6},
	pages={213--223},
	year={2005},
	organization={ACM}
}

@inproceedings{fraser2012seed,
	title={The seed is strong: Seeding strategies in search-based software testing},
	author={Fraser, Gordon and Arcuri, Andrea},
	booktitle={Software Testing, Verification and Validation (ICST), 2012 IEEE Fifth International Conference on},
	pages={121--130},
	year={2012},
	organization={IEEE}
}

@inproceedings{groce2007randomized,
	title={Randomized differential testing as a prelude to formal verification},
	author={Groce, Alex and Holzmann, Gerard and Joshi, Rajeev},
	booktitle={Proceedings of the 29th international conference on Software Engineering},
	pages={621--631},
	year={2007},
	organization={IEEE Computer Society}
}

@article{Yoo:2012:TDR:2237756.2237758,
	author = {Yoo, S. and Harman, M.},
	title = {Test Data Regeneration: Generating New Test Data from Existing Test Data},
	journal = {Softw. Test. Verif. Reliab.},
	issue_date = {May 2012},
	volume = {22},
	number = {3},
	month = may,
	year = {2012},
	issn = {0960-0833},
	pages = {171--201},
	numpages = {31},
	url = {http://dx.doi.org/10.1002/stvr.435},
	doi = {10.1002/stvr.435},
	acmid = {2237758},
	publisher = {John Wiley and Sons Ltd.},
	address = {Chichester, UK},
	keywords = {search-based software testing, test data generation},
} 

@INPROCEEDINGS{test-suite-augmentation, 
	author={R. {Santelices} and P. K. {Chittimalli} and T. {Apiwattanapong} and A. {Orso} and M. J. {Harrold}}, 
	booktitle={2008 23rd IEEE/ACM International Conference on Automated Software Engineering}, 
	title={Test-Suite Augmentation for Evolving Software}, 
	year={2008}, 
	volume={}, 
	number={}, 
	pages={218-227}, 
	keywords={program testing;software fault tolerance;test-suite augmentation;regression testing;evolving software;MATRIX;dependence analysis;partial symbolic execution;fault-detection capabilities;Distance measurement;Software;Testing;Fault diagnosis;Explosions;Gain;Patents}, 
	doi={10.1109/ASE.2008.32}, 
	ISSN={1938-4300}, 
	month={Sep.},}

@INPROCEEDINGS{automated-behavioral-regression-testing, 
	author={W. {Jin} and A. {Orso} and T. {Xie}}, 
	booktitle={2010 Third International Conference on Software Testing, Verification and Validation}, 
	title={Automated Behavioral Regression Testing}, 
	year={2010}, 
	volume={}, 
	number={}, 
	pages={137-146}, 
	keywords={automatic test software;program testing;regression analysis;software fault tolerance;software maintenance;software quality;automated behavioral regression testing technique;regression faults;program functionality;program testing;dynamical analysis;BERT;Eclipse;integrated development environment;software maintenance;Automatic testing;Bit error rate;Vehicle crash testing;Software testing;Fault diagnosis;Costs;Performance evaluation;Software maintenance;Inspection;Writing;Regression testing;software evolution;dynamic analysis}, 
	doi={10.1109/ICST.2010.64}, 
	ISSN={2159-4848}, 
	month={April},}

@inproceedings{Orso:2008:BBR:1401827.1401835,
	author = {Orso, Alessandro and Xie, Tao},
	title = {BERT: BEhavioral Regression Testing},
	booktitle = {Proceedings of the 2008 International Workshop on Dynamic Analysis: Held in Conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008)},
	series = {WODA '08},
	year = {2008},
	isbn = {978-1-60558-054-8},
	location = {Seattle, Washington},
	pages = {36--42},
	numpages = {7},
	url = {http://doi.acm.org/10.1145/1401827.1401835},
	doi = {10.1145/1401827.1401835},
	acmid = {1401835},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {dynamic analysis, regression testing, software evolution},
} 

@inproceedings{evans2007differential,
	title={Differential testing: a new approach to change detection},
	author={Evans, Robert B and Savoia, Alberto},
	booktitle={The 6th Joint Meeting on European software engineering conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering: Companion Papers},
	pages={549--552},
	year={2007},
	organization={ACM}
}

@inproceedings{saff2004experimental,
	title={An experimental evaluation of continuous testing during development},
	author={Saff, David and Ernst, Michael D},
	booktitle={ACM SIGSOFT Software Engineering Notes},
	volume={29},
	number={4},
	pages={76--85},
	year={2004},
	organization={ACM}
}


@inproceedings{gousios2014exploratory,
	title={An exploratory study of the pull-based software development model},
	author={Gousios, Georgios and Pinzger, Martin and Deursen, Arie van},
	booktitle={Proceedings of the 36th International Conference on Software Engineering},
	pages={345--355},
	year={2014},
	organization={ACM}
}


@inproceedings{CATG,
	author = {Tanno, Haruto and Zhang, Xiaojing and Hoshino, Takashi and Sen, Koushik},
	title = {TesMa and CATG: Automated Test Generation Tools for Models of Enterprise Applications},
	booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 2},
	series = {ICSE '15},
	year = {2015},
	location = {Florence, Italy},
	pages = {717--720},
	numpages = {4},
	url = {http://dl.acm.org/citation.cfm?id=2819009.2819147},
	acmid = {2819147},
	publisher = {IEEE Press},
	address = {Piscataway, NJ, USA},
} 

@inproceedings{bohme2014corebench,
	title={Corebench: Studying complexity of regression errors},
	author={B{\"o}hme, Marcel and Roychoudhury, Abhik},
	booktitle={Proceedings of the 2014 International Symposium on Software Testing and Analysis},
	pages={105--115},
	year={2014},
	organization={ACM}
}

@inproceedings{palikareva2016shadow,
	title={Shadow of a doubt: testing for divergences between software versions},
	author={Palikareva, Hristina and Kuchta, Tomasz and Cadar, Cristian},
	booktitle={Proceedings of the 38th International Conference on Software Engineering},
	pages={1181--1192},
	year={2016},
	organization={ACM}
}

@inproceedings{marinescu2013katch,
	title = {{KATCH}: high-coverage testing of software patches},
	isbn = {978-1-4503-2237-9},
	shorttitle = {{KATCH}},
	url = {http://dl.acm.org/citation.cfm?doid=2491411.2491438},
	doi = {10.1145/2491411.2491438},
	language = {en},
	urldate = {2017-04-28},
	publisher = {ACM Press},
	author = {Marinescu, Paul Dan and Cadar, Cristian},
	year = {2013},
	pages = {235}
}

@inproceedings{rosen2015commit,
	title={Commit guru: analytics and risk prediction of software commits},
	author={Rosen, Christoffer and Grawi, Ben and Shihab, Emad},
	booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	pages={966--969},
	year={2015},
	organization={ACM}
}


@ARTICLE{TillmannSymbc, 
	author={N. Tillmann and W. Schulte}, 
	journal={IEEE Software}, 
	title={Unit tests reloaded: parameterized unit testing with symbolic execution}, 
	year={2006}, 
	volume={23}, 
	number={4}, 
	pages={38-47}, 
	keywords={object-oriented programming;program diagnostics;program testing;PUT symbolic execution;constraint solving;parameterized unit testing;unit test automation;Automatic testing;Containers;Indexing;Protection;Software testing;Visual databases;Writing;formal methods;symbolic execution;test coverage of code;test design;testing tools;validation}, 
	doi={10.1109/MS.2006.117}, 
	ISSN={0740-7459}, 
	month={July},
}

@article{DSpotarXiv,
	author    = {Benoit Baudry and
	Simon Allier and
	Marcelino Rodriguez{-}Cancio and
	Martin Monperrus},
	title     = {DSpot: Test Amplification for Automatic Assessment of Computational
	Diversity},
	journal   = {CoRR},
	volume    = {abs/1503.05807},
	year      = {2015},
	url       = {http://arxiv.org/abs/1503.05807},
	archivePrefix = {arXiv},
	eprint    = {1503.05807},
	timestamp = {Wed, 07 Jun 2017 14:41:05 +0200},
	biburl    = {https://dblp.org/rec/bib/journals/corr/BaudryARM15},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{jpfshadow,
	author = {Noller, Yannic and Nguyen, Hoang Lam and Tang, Minxing and Kehrer, Timo},
	title = {Shadow Symbolic Execution with Java PathFinder},
	journal = {SIGSOFT Softw. Eng. Notes},
	issue_date = {October 2017},
	volume = {42},
	number = {4},
	month = jan,
	year = {2018},
	issn = {0163-5948},
	pages = {1--5},
	numpages = {5},
	url = {http://doi.acm.org/10.1145/3149485.3149492},
	doi = {10.1145/3149485.3149492},
	acmid = {3149492},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Java PathFinder, Regression Testcase Generation, Software Engineering, Symbolic Execution, Symbolic PathFinder},
}

@inproceedings{zhang2012,
	title={Amplifying tests to validate exception handling code},
	author={Zhang, Pingyu and Elbaum, Sebastian},
	booktitle={Proc. of Int. Conf. on Software Engineering (ICSE)},
	pages={595--605},
	year={2012},
	organization={IEEE Press}
}


@inproceedings{dse,
	author = {Person, Suzette and Dwyer, Matthew B. and Elbaum, Sebastian and P\v{a}s\v{a}reanu, Corina S.},
	title = {Differential Symbolic Execution},
	booktitle = {Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
	series = {SIGSOFT '08/FSE-16},
	year = {2008},
	isbn = {978-1-59593-995-1},
	location = {Atlanta, Georgia},
	pages = {226--237},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/1453101.1453131},
	doi = {10.1145/1453101.1453131},
	acmid = {1453131},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {program differencing, software evolution, symbolic execution},
} 

@article{voas1995software,
	title={Software testability: The new verification},
	author={Voas, Jeffrey M. and Miller, Keith W},
	journal={IEEE software},
	volume={12},
	number={3},
	pages={17--28},
	year={1995},
	publisher={IEEE}
}

@Article{Danglot2018,
	author="Danglot, Benjamin
	and Preux, Philippe
	and Baudry, Benoit
	and Monperrus, Martin",
	title="Correctness attraction: a study of stability of software behavior under runtime perturbation",
	journal="Empirical Software Engineering",
	year="2018",
	month="Aug",
	day="01",
	volume="23",
	number="4",
	pages="2086--2119",
	abstract="Can the execution of software be perturbed without breaking the correctness of the output? In this paper, we devise a protocol to answer this question from a novel perspective. In an experimental study, we observe that many perturbations do not break the correctness in ten subject programs. We call this phenomenon ``correctness attraction''. The uniqueness of this protocol is that it considers a systematic exploration of the perturbation space as well as perfect oracles to determine the correctness of the output. To this extent, our findings on the stability of software under execution perturbations have a level of validity that has never been reported before in the scarce related work. A qualitative manual analysis enables us to set up the first taxonomy ever of the reasons behind correctness attraction.",
	issn="1573-7616",
	doi="10.1007/s10664-017-9571-8",
	url="https://doi.org/10.1007/s10664-017-9571-8"
}

@inproceedings{Hilton:2016:UsageCI,
	author = {Hilton, Michael and Tunnell, Timothy and Huang, Kai and Marinov, Darko and Dig, Danny},
	title = {Usage, Costs, and Benefits of Continuous Integration in Open-source Projects},
	booktitle = {Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
	series = {ASE 2016},
	year = {2016},
	isbn = {978-1-4503-3845-5},
	location = {Singapore, Singapore},
	pages = {426--437},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/2970276.2970358},
	doi = {10.1145/2970276.2970358},
	acmid = {2970358},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {continuous integration, mining software repositories},
} 

@INPROCEEDINGS{static:analysis:in:ci, 
	author={F. Zampetti and S. Scalabrino and R. Oliveto and G. Canfora and M. Di Penta}, 
	booktitle={2017 IEEE/ACM 14th International Conference on Mining Software Repositories (MSR)}, 
	title={How Open Source Projects Use Static Code Analysis Tools in Continuous Integration Pipelines}, 
	year={2017}, 
	volume={}, 
	number={}, 
	pages={334-344}, 
	keywords={Java;program diagnostics;public domain software;software development management;CI;GitHub;Java open source projects;Travis CI;build failures;code smells;coding standards;continuous integration infrastructure;continuous integration pipelines;open source projects;potential faults;software developers;source code adherence;static code analysis tools;Data mining;Encoding;History;Java;Pipelines;Software;Tools;Continuous Integration;Empirical Study;Open Source Projects;Static Analysis Tools}, 
	doi={10.1109/MSR.2017.2}, 
	ISSN={}, 
	month={May},}

@inproceedings{falleri:hal-01054552,
	title = {{Fine-grained and Accurate Source Code Differencing}},
	author = {Falleri, Jean-R{\'e}my and Morandat, Flor{\'e}al and Blanc, Xavier and Martinez, Matias and Monperrus, Martin},
	url = {https://hal.archives-ouvertes.fr/hal-01054552/file/main.pdf},
	booktitle = {{Proceedings of the International Conference on Automated Software Engineering}},
	pages = {313-324},
	year = {2014},
	doi = {10.1145/2642937.2642982},
}

@inproceedings{Spieker:RL:selection,
	author = {Spieker, Helge and Gotlieb, Arnaud and Marijan, Dusica and Mossige, Morten},
	title = {Reinforcement Learning for Automatic Test Case Prioritization and Selection in Continuous Integration},
	booktitle = {Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis},
	series = {ISSTA 2017},
	year = {2017},
	isbn = {978-1-4503-5076-1},
	location = {Santa Barbara, CA, USA},
	pages = {12--22},
	numpages = {11},
	url = {http://doi.acm.org/10.1145/3092703.3092709},
	doi = {10.1145/3092703.3092709},
	acmid = {3092709},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Continuous Integration, Machine Learning, Regression testing, Reinforcement Learning, Test case prioritization, Test case selection},
} 

@article{Waller:2015:IPB:2735399.2735416,
	author = {Waller, Jan and Ehmke, Nils C. and Hasselbring, Wilhelm},
	title = {Including Performance Benchmarks into Continuous Integration to Enable DevOps},
	journal = {SIGSOFT Softw. Eng. Notes},
	issue_date = {March 2015},
	volume = {40},
	number = {2},
	month = apr,
	year = {2015},
	issn = {0163-5948},
	pages = {1--4},
	numpages = {4},
	url = {http://doi.acm.org/10.1145/2735399.2735416},
	doi = {10.1145/2735399.2735416},
	acmid = {2735416},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Jenkins, Kieker, MooBench},
} 

@inproceedings{vanHoorn:2012:KFA:2188286.2188326,
	author = {van Hoorn, Andr{\'e} and Waller, Jan and Hasselbring, Wilhelm},
	title = {Kieker: A Framework for Application Performance Monitoring and Dynamic Software Analysis},
	booktitle = {Proceedings of the 3rd ACM/SPEC International Conference on Performance Engineering},
	series = {ICPE '12},
	year = {2012},
	isbn = {978-1-4503-1202-8},
	location = {Boston, Massachusetts, USA},
	pages = {247--248},
	numpages = {2},
	url = {http://doi.acm.org/10.1145/2188286.2188326},
	doi = {10.1145/2188286.2188326},
	acmid = {2188326},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {application performance monitoring, dynamic software analysis, kieker framework},
} 

@unknown{jpfsymb,
	author = {Anand, Saswat and S. Pasareanu, Corina and Visser, Willem},
	year = {2007},
	month = {03},
	pages = {134-138},
	title = {JPF-SE: A symbolic execution extension to Java pathfinder},
	volume = {4424}
}

@inproceedings{klee,
	author = {Cadar, Cristian and Dunbar, Daniel and Engler, Dawson},
	title = {KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs},
	booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
	series = {OSDI'08},
	year = {2008},
	location = {San Diego, California},
	pages = {209--224},
	numpages = {16},
	url = {http://dl.acm.org/citation.cfm?id=1855741.1855756},
	acmid = {1855756},
	publisher = {USENIX Association},
	address = {Berkeley, CA, USA},
} 

@inproceedings{Campos:2014:CTG:2642937.2643002,
	author = {Campos, Jos{\'e} and Arcuri, Andrea and Fraser, Gordon and Abreu, Rui},
	title = {Continuous Test Generation: Enhancing Continuous Integration with Automated Test Generation},
	booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
	series = {ASE '14},
	year = {2014},
	isbn = {978-1-4503-3013-8},
	location = {Vasteras, Sweden},
	pages = {55--66},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/2642937.2643002},
	doi = {10.1145/2642937.2643002},
	acmid = {2643002},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {automated test generation, continuous integration, continuous testing, unit testing},
} 

@inproceedings{Arie,
	author = {Gousios, Georgios and Pinzger, Martin and Deursen, Arie van},
	title = {An Exploratory Study of the Pull-based Software Development Model},
	booktitle = {Proceedings of the 36th International Conference on Software Engineering},
	series = {ICSE 2014},
	year = {2014},
	isbn = {978-1-4503-2756-5},
	location = {Hyderabad, India},
	pages = {345--355},
	numpages = {11},
	url = {http://doi.acm.org/10.1145/2568225.2568260},
	doi = {10.1145/2568225.2568260},
	acmid = {2568260},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Pull-based development, distributed software development, empirical software engineering, pull request},
} 

@book{duvall2007continuous,
	title={Continuous integration: improving software quality and reducing risk},
	author={Duvall, Paul M and Matyas, Steve and Glover, Andrew},
	year={2007},
	publisher={Pearson Education}
}

@article{fowler2006continuous,
	title={Continuous integration},
	author={Fowler, Martin and Foemmel, Matthew},
	journal={Thought-Works https://www.thoughtworks.com/continuous-integration},
	volume={122},
	pages={14},
	year={2006}
}

@Misc{pr:based:dvlpp,
	howpublished = {\url{https://www.madetech.com/blog/deployment-by-pull-requests}},
	note = {Accessed June 17, 2018},
	title = {The benefits of a pull request workflow},
	author = {Alex Minette}
}

@inproceedings{repairnator,
	TITLE = {{How to Design a Program Repair Bot? Insights from the Repairnator Project}},
	AUTHOR = {Urli, Simon and Yu, Zhongxing and Seinturier, Lionel and Monperrus, Martin},
	BOOKTITLE = {{ICSE 2018 - 40th International Conference on Software Engineering, Track Software Engineering in Practice (SEIP)}},
	PAGES = {1-10},
	YEAR = {2018},
	DOI = {10.1145/nnnnnnn.nnnnnnn},
}

@Article{descartes,
	author="Vera-P{\'e}rez, Oscar Luis
	and Danglot, Benjamin
	and Monperrus, Martin
	and Baudry, Benoit",
	title="A comprehensive study of pseudo-tested methods",
	journal="Empirical Software Engineering",
	year="2018",
	month="Sep",
	day="19",
	abstract="Pseudo-tested methods are defined as follows: they are covered by the test suite, yet no test case fails when the method body is removed, i.e., when all the effects of this method are suppressed. This intriguing concept was coined in 2016, by Niedermayr and colleagues, who showed that such methods are systematically present, even in well-tested projects with high statement coverage. This work presents a novel analysis of pseudo-tested methods. First, we run a replication of Niedermayr's study with 28K+ methods, enhancing its external validity thanks to the use of new tools and new study subjects. Second, we perform a systematic characterization of these methods, both quantitatively and qualitatively with an extensive manual analysis of 101 pseudo-tested methods. The first part of the study confirms Niedermayr's results: pseudo-tested methods exist in all our subjects. Our in-depth characterization of pseudo-tested methods leads to two key insights: pseudo-tested methods are significantly less tested than the other methods; yet, for most of them, the developers would not pay the testing price to fix this situation. This calls for future work on targeted test generation to specify those pseudo-tested methods without spending developer time.",
	issn="1573-7616",
	doi="10.1007/s10664-018-9653-2",
	url="https://doi.org/10.1007/s10664-018-9653-2"
}

@inproceedings{Test:Coverage:Evolution,
	author = {Hilton, Michael and Bell, Jonathan and Marinov, Darko},
	title = {A Large-scale Study of Test Coverage Evolution},
	booktitle = {Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering},
	series = {ASE 2018},
	year = {2018},
	isbn = {978-1-4503-5937-5},
	location = {Montpellier, France},
	pages = {53--63},
	numpages = {11},
	url = {http://doi.acm.org/10.1145/3238147.3238183},
	doi = {10.1145/3238147.3238183},
	acmid = {3238183},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Software testing, code coverage, empirical study, flaky tests},
} 

@article{Kuchta:2018:SSE:3276753.3208952,
	author = {Kuchta, Tomasz and Palikareva, Hristina and Cadar, Cristian},
	title = {Shadow Symbolic Execution for Testing Software Patches},
	journal = {ACM Trans. Softw. Eng. Methodol.},
	issue_date = {September 2018},
	volume = {27},
	number = {3},
	month = sep,
	year = {2018},
	issn = {1049-331X},
	pages = {10:1--10:32},
	articleno = {10},
	numpages = {32},
	url = {http://doi.acm.org/10.1145/3208952},
	doi = {10.1145/3208952},
	acmid = {3208952},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Symbolic patch testing, cross-version checks, regression bugs},
} 

@inproceedings{Noller:2018:DPA:3238147.3241537,
	author = {Noller, Yannic},
	title = {Differential Program Analysis with Fuzzing and Symbolic Execution},
	booktitle = {Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering},
	series = {ASE 2018},
	year = {2018},
	isbn = {978-1-4503-5937-5},
	location = {Montpellier, France},
	pages = {944--947},
	numpages = {4},
	url = {http://doi.acm.org/10.1145/3238147.3241537},
	doi = {10.1145/3238147.3241537},
	acmid = {3241537},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Differential Program Analysis, Fuzzing, Symbolic Execution},
} 

@INPROCEEDINGS{semantics:code:review, 
	author={M. Menarini and Y. Yan and W. G. Griswold}, 
	booktitle={2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)}, 
	title={Semantics-assisted code review: An efficient tool chain and a user study}, 
	year={2017}, 
	volume={}, 
	number={}, 
	pages={554-565}, 
	keywords={data mining;Internet;project management;software maintenance;semantic-assisted code review;invariant-mining tool chain;code differences;inter-version semantic differential analysis;code repositories;code changes;Tools;Testing;Computer bugs;Semantics;Software;Navigation;Software behavior;mining software repository;code review;likely invariants;dynamic impact analysis;scalability;software testing}, 
	doi={10.1109/ASE.2017.8115666}, 
	ISSN={}, 
	month={Oct},}

@inproceedings{USE:Liang:2018:UUS:3183440.3195020,
	author = {Liang, Hongliang and Hu, Wenying and Zhang, Yini and Jiang, Lin and Shen, Wuwei},
	title = {USE: Unified and Split Execution for Exposing Divergences Between Versions},
	booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
	series = {ICSE '18},
	year = {2018},
	isbn = {978-1-4503-5663-3},
	location = {Gothenburg, Sweden},
	pages = {386--387},
	numpages = {2},
	url = {http://doi.acm.org/10.1145/3183440.3195020},
	doi = {10.1145/3183440.3195020},
	acmid = {3195020},
	publisher = {ACM},
	address = {New York, NY, USA},
} 

@inproceedings{Yang:2014:PDI:2568225.2568319,
	author = {Yang, Guowei and Khurshid, Sarfraz and Person, Suzette and Rungta, Neha},
	title = {Property Differencing for Incremental Checking},
	booktitle = {Proceedings of the 36th International Conference on Software Engineering},
	series = {ICSE 2014},
	year = {2014},
	isbn = {978-1-4503-2756-5},
	location = {Hyderabad, India},
	pages = {1059--1070},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/2568225.2568319},
	doi = {10.1145/2568225.2568319},
	acmid = {2568319},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Daikon, Incremental symbolic execution, Symbolic PathFinder, assertions, change-impact analysis},
} 

@techreport{differential-assertion-checking,
	author = {Lahiri, Shuvendu and McMillan, Kenneth and Hawblitzel, Chris},
	title = {Differential Assertion Checking},
	booktitle = {},
	year = {2013},
	month = {March},
	abstract = {
	
	Previous versions of a program can be a powerful enabler for program analysis by defining new relative specifications and making the results of current program analysis more relevant. In this paper, we describe the approach of it differential assertion checking (DAC) for comparing versions of a program with respect to a set of assertions. DAC provides a natural way to write relative specifications over two programs. We introduce a novel modular approach to DAC by reducing it to single program checking that can be accomplished by any program verifier. In particular, we leverage automatic invariant generation to synthesize relative specifications for pairs of loops and procedures. We provide a preliminary evaluation of a prototype implementation within the symdiff tool along two directions (a) soundly verifying bug fixes in the presence of loops and (b) providing a knob for suppressing alarms when checking a new version of a program.
	
	
	},
	publisher = {},
	url = {https://www.microsoft.com/en-us/research/publication/differential-assertion-checking/},
	address = {},
	pages = {},
	journal = {},
	volume = {},
	chapter = {},
	isbn = {},
}

@INPROCEEDINGS{ReAssert, 
	author={B. Daniel and V. Jagannath and D. Dig and D. Marinov}, 
	booktitle={2009 IEEE/ACM International Conference on Automated Software Engineering}, 
	title={ReAssert: Suggesting Repairs for Broken Unit Tests}, 
	year={2009}, 
	volume={}, 
	number={}, 
	pages={433-444}, 
	keywords={program testing;software maintenance;ReAssert;broken unit tests;code under test;test code;test suite;test repair;program transformation;assertion method;Automatic testing;Software testing;Application software;Logic testing;Performance evaluation;Software engineering;USA Councils;Programming;Government;Protection;Software testing;Software maintenance;Software tools;Software test maintenance}, 
	doi={10.1109/ASE.2009.17}, 
	ISSN={1938-4300}, 
	month={Nov},
}

@Article{Danglot2019,
	author="Danglot, Benjamin
	and Vera-P{\'e}rez, Oscar Luis
	and Baudry, Benoit
	and Monperrus, Martin",
	title="Automatic test improvement with DSpot: a study with ten mature open-source projects",
	journal="Empirical Software Engineering",
	year="2019",
	month="Apr",
	day="24",
	abstract="In the literature, there is a rather clear segregation between manually written tests by developers and automatically generated ones. In this paper, we explore a third solution: to automatically improve existing test cases written by developers. We present the concept, design and implementation of a system called DSpot, that takes developer-written test cases as input (JUnit tests in Java) and synthesizes improved versions of them as output. Those test improvements are given back to developers as patches or pull requests, that can be directly integrated in the main branch of the test code base. We have evaluated DSpot in a deep, systematic manner over 40 real-world unit test classes from 10 notable and open-source software projects. We have amplified all test methods from those 40 unit test classes. In 26/40 cases, DSpot is able to automatically improve the test under study, by triggering new behaviors and adding new valuable assertions. Next, for ten projects under consideration, we have proposed a test improvement automatically synthesized by DSpot to the lead developers. In total, 13/19 proposed test improvements were accepted by the developers and merged into the main code base. This shows that DSpot is capable of automatically improving unit-tests in real-world, large scale Java software.",
	issn="1573-7616",
	doi="10.1007/s10664-019-09692-y",
	url="https://doi.org/10.1007/s10664-019-09692-y"
}

@inproceedings{PachecoE2005,
	author = {Carlos Pacheco and Michael D. Ernst},
	title = {Eclat: Automatic generation and classification of test inputs},
	booktitle = {ECOOP 2005 --- Object-Oriented Programming, 19th European
	Conference},
	pages = {504--527},
	address = {Glasgow, Scotland},
	month = jul,
	year = {2005}
}

@article{TOSEM_userstudy,
	author = {Gordon Fraser and Matt Staats and Phil McMinn and Andrea Arcuri and Frank Padberg},
	title = {Does Automated Unit Test Generation Really Help Software Testers? A Controlled Empirical Study},
	journal ={ACM Transactions on Software Engineering and Methodology (TOSEM)},
	volume={24},
	number={4},
	pages={23},
	year={2015},
	publisher={ACM}
}

@article{DBLP:journals/corr/abs-1902-08482,
	author    = {Benjamin Danglot and
	Martin Monperrus and
	Walter Rudametkin and
	Benoit Baudry},
	title     = {An Approach and Benchmark to Detect Behavioral Changes of Commits
	in Continuous Integration},
	journal   = {CoRR},
	volume    = {abs/1902.08482},
	year      = {2019},
	url       = {http://arxiv.org/abs/1902.08482},
	archivePrefix = {arXiv},
	eprint    = {1902.08482},
	timestamp = {Tue, 21 May 2019 18:03:39 +0200},
	biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1902-08482},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Article{Yu2019,
	author="Yu, Zhongxing
	and Martinez, Matias
	and Danglot, Benjamin
	and Durieux, Thomas
	and Monperrus, Martin",
	title="Alleviating patch overfitting with automatic test generation: a study of feasibility and effectiveness for the Nopol repair system",
	journal="Empirical Software Engineering",
	year="2019",
	month="Feb",
	day="01",
	volume="24",
	number="1",
	pages="33--67",
	abstract="Among the many different kinds of program repair techniques, one widely studied family of techniques is called test suite based repair. However, test suites are in essence input-output specifications and are thus typically inadequate for completely specifying the expected behavior of the program under repair. Consequently, the patches generated by test suite based repair techniques can just overfit to the used test suite, and fail to generalize to other tests. We deeply analyze the overfitting problem in program repair and give a classification of this problem. This classification will help the community to better understand and design techniques to defeat the overfitting problem. We further propose and evaluate an approach called UnsatGuided, which aims to alleviate the overfitting problem for synthesis-based repair techniques with automatic test case generation. The approach uses additional automatically generated tests to strengthen the repair constraint used by synthesis-based repair techniques. We analyze the effectiveness of UnsatGuided: 1) analytically with respect to alleviating two different kinds of overfitting issues; 2) empirically based on an experiment over the 224 bugs of the Defects4J repository. The main result is that automatic test generation is effective in alleviating one kind of overfitting, issue--regression introduction, but due to oracle problem, has minimal positive impact on alleviating the other kind of overfitting issue--incomplete fixing.",
	issn="1573-7616",
	doi="10.1007/s10664-018-9619-4",
	url="https://doi.org/10.1007/s10664-018-9619-4"
}






@techreport{kitchenham2004procedures,
	title={Procedures for performing systematic reviews},
	author={Kitchenham, Barbara},
	institution={Keele University},
	year={2004}
}

@inproceedings{petersen2008systematic,
	title={{Systematic Mapping Studies in Software Engineering}},
	author={Petersen, Kai and Feldt, Robert and Mujtaba, Shahid and Mattsson, Michael},
	booktitle={EASE},
	volume={8},
	pages={68--77},
	year={2008}
}

@inproceedings{DBLP:conf/icsm/PalombaZ17,
	author    = {Fabio Palomba and
	Andy Zaidman},
	title     = {Does Refactoring of Test Smells Induce Fixing Flaky Tests?},
	booktitle = {2017 {IEEE} International Conference on Software Maintenance and Evolution ({ICSME})},
	pages     = {1--12},
	year      = {2017},
	publisher = {{IEEE} Computer Society},
	year      = {2017}
}

@article{PalombaEMSE2019,
	author = {Fabio Palomb and Andy Zaidman},
	title = {The Smell of Fear: On the Relation between Test Smells and Flaky Tests},
    journal = {Empirical Software Engineering (EMSE)},
    note = {To Appear},
}

@inproceedings{beller2015howmuch,
	author    = {Moritz Beller and
	Georgios Gousios and
	Andy Zaidman},
	title     = {How (Much) Do Developers Test?},
	booktitle = {Proceedings of the 37th {IEEE/ACM} International Conference on Software Engineering (ICSE)},
	pages     = {559--562},
	year      = {2015},
	publisher = {{IEEE} Computer Society}
}

@inproceedings{beller2015when,
	author    = {Moritz Beller and
	Georgios Gousios and
	Annibale Panichella and
	Andy Zaidman},
	title     = {When, how, and why developers (do not) test in their {IDEs}},
	booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software
	Engineering ({ESEC/FSE})},
	pages     = {179--190},
	year      = {2015},
	publisher = {{ACM}}
}

@inproceedings{hilton2018coverageevolution,
	author    = {Michael Hilton and
	Jonathan Bell and
	Darko Marinov},
	title     = {A large-scale study of test coverage evolution},
	booktitle = {Proceedings of the 33rd {ACM/IEEE} International Conference on Automated
	Software Engineering ({ASE})},
	pages     = {53--63},
	year      = {2018},
	publisher = {{ACM}},
}

@article{Brereton2007lessons,
	author    = {Pearl Brereton and
	Barbara A. Kitchenham and
	David Budgen and
	Mark Turner and
	Mohamed Khalil},
	title     = {Lessons from applying the systematic literature review process within
	the software engineering domain},
	journal   = {Journal of Systems and Software},
	volume    = {80},
	number    = {4},
	pages     = {571--583},
	year      = {2007},
	url       = {https://doi.org/10.1016/j.jss.2006.07.009},
	doi       = {10.1016/j.jss.2006.07.009},
	timestamp = {Wed, 14 Nov 2018 10:34:07 +0100},
	biburl    = {https://dblp.org/rec/bib/journals/jss/BreretonKBTK07},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{wohlin2014guidelines,
	title={{Guidelines for Snowballing in Systematic Literature Studies and a Replication in Software Engineering}},
	author={Wohlin, Claes},
	booktitle={{Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering}},
	pages={38},
	year={2014},
	organization={ACM}
}


@book{cooper1998synthesizing,
	title={Synthesizing Research: A Guide for Literature Reviews},
	author={Cooper, Harris M},
	volume={2},
	year={1998},
	publisher={Sage}
}


@article{rojas2016seeding,
	title={Seeding strategies in search-based unit test generation},
	author={Rojas, Jos{\'e} Miguel and Fraser, Gordon and Arcuri, Andrea},
	journal={Software Testing, Verification and Reliability},
	volume={26},
	number={5},
	pages={366--401},
	year={2016},
	publisher={Wiley Online Library}
}

@article{ZhangE14,
	author    = {Pingyu Zhang and
	Sebastian G. Elbaum},
	title     = {Amplifying Tests to Validate Exception Handling Code: An Extended
	Study in the Mobile Application Domain},
	journal   = {{ACM} Trans. Softw. Eng. Methodol.},
	volume    = {23},
	number    = {4},
	pages     = {32:1--32:28},
	year      = {2014},
}



%references and citers done
@inproceedings{xuan2014test,
	title={Test case purification for improving fault localization},
	author={Xuan, Jifeng and Monperrus, Martin},
	booktitle={Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
	pages={52--63},
	year={2014},
	organization={ACM}
}

%references done, citeres checks
@article{smith2009guiding,
	title={On guiding the augmentation of an automated test suite via mutation analysis},
	author={Smith, Ben H and Williams, Laurie},
	journal={Empirical Software Engineering},
	volume={14},
	number={3},
	pages={341--369},
	year={2009},
	publisher={Springer},
	url={https://repository.lib.ncsu.edu/bitstream/handle/1840.4/1967/TR-2008-9.pdf?sequence=1}
}

%references and citers done
@article{smith2009should,
	title={Should software testers use mutation analysis to augment a test set?},
	author={Smith, Ben H and Williams, Laurie},
	journal={Journal of Systems and Software},
	volume={82},
	number={11},
	pages={1819--1832},
	year={2009},
	publisher={Elsevier}
}

%citers done
@techreport{zhu2016systematic,
	title={A systematic literature review of how mutation testing supports test activities},
	author={Zhu, Qianqian and Panichella, Annibale and Zaidman, Andy},
	year={2016},
	institution={PeerJ Preprints}
}

% references and citers done
@inproceedings{zhang2012,
	title={Amplifying tests to validate exception handling code},
	author={Zhang, Pingyu and Elbaum, Sebastian},
	booktitle={Proceedings of the 34th International Conference on Software Engineering},
	pages={595--605},
	year={2012},
	organization={IEEE Press},
}

% references checked, citers done
@article{carr2016automatic,
	title={Automatic Contract Insertion with CCBot},
	author={Carr, Scott A and Logozzo, Francesco and Payer, Mathias},
	journal={IEEE Transactions on Software Engineering},
	year={2016},
	publisher={IEEE}
}

%this is an introduction paper, no need to consider the refs.
@article{mcminn2004search,
	title={Search-based software test data generation: A survey},
	author={McMinn, Phil},
	journal={Software Testing Verification and Reliability},
	volume={14},
	number={2},
	pages={105--156},
	year={2004}
}

% martin
@inproceedings{fang2015perfblower,
	title={PERFBLOWER: Quickly Detecting Memory-Related Performance Problems via Amplification},
	author={Fang, Lu and Dou, Liang and Xu, Guoqing},
	booktitle={LIPIcs-Leibniz International Proceedings in Informatics},
	volume={37},
	year={2015},
	organization={Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}
}


@article{HamletV93,
	title={Faults on its sleeve: amplifying software reliability testing},
	author={Hamlet, Dick and Voas, Jeff},
	journal={ACM SIGSOFT Software Engineeri ng Notes},
	volume={18},
	number={3},
	pages={89--98},
	year={1993},
	publisher={ACM}
}

@article{azaidmanEMSE2011,
	author    = {Andy Zaidman and
	Bart {Van Rompaey} and
	Arie van Deursen and
	Serge Demeyer},
	title     = {Studying the co-evolution of production and test code in open source
	and industrial developer test processes through repository mining},
	journal   = {Empirical Software Engineering},
	volume    = {16},
	number    = {3},
	pages     = {325--364},
	year      = {2011},
	url       = {https://doi.org/10.1007/s10664-010-9143-7},
	doi       = {10.1007/s10664-010-9143-7},
	timestamp = {Thu, 15 Jun 2017 21:30:27 +0200},
	biburl    = {https://dblp.org/rec/bib/journals/ese/ZaidmanRDD11},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{Meszaros2006,
	author = {Meszaros, Gerard},
	title = {XUnit Test Patterns: Refactoring Test Code},
	year = {2006},
	publisher = {Prentice Hall PTR},
} 

@book{Madeyski2010,
	author = {Lech Madeyski},
	title = {Test-Driven Development: An Empirical Evaluation of Agile Practice},
	year = {2010},
	publisher = {Springer}
}

%this is an introduction paper, no need to consider the refs.
@inproceedings{edvardsson1999survey,
	title={A survey on automatic test data generation},
	author={Edvardsson, Jon},
	booktitle={Proceedings of the 2nd Conference on Computer Science and Engineering},
	pages={21--28},
	year={1999}
}

%this is an introduction paper, no need to consider the refs.
@inproceedings{vandeursen2001refactoring,
	title={Refactoring test code},
	author={{van Deursen}, Arie and Moonen, Leon and van den Bergh, Alex and Kok, Gerard},
	booktitle={Proceedings of the 2nd international conference on extreme programming and flexible processes in software engineering (XP2001)},
	pages={92--95},
	year={2001}
}

@incollection{DBLP:series/springer/MoonenDZB08,
	author    = {Leon Moonen and
	Arie van Deursen and
	Andy Zaidman and
	Magiel Bruntink},
	title     = {On the Interplay Between Software Testing and Evolution and its Effect
	on Program Comprehension},
	booktitle = {Software Evolution},
	pages     = {173--202},
	year      = {2008},
	editor    = {Tom Mens and
	Serge Demeyer},
	title     = {Software Evolution},
	publisher = {Springer},
}


@article{ostrand1988category,
	title={The category-partition method for specifying and generating fuctional tests},
	author={Ostrand, Thomas J. and Balcer, Marc J.},
	journal={Communications of the ACM},
	volume={31},
	number={6},
	pages={676--686},
	year={1988},
	publisher={ACM}
}


%reference checked, citers checkes
@article{xuan:hal-01309004,
	title = {{B-Refactoring: Automatic Test Code Refactoring to Improve Dynamic Analysis}},
	author = {Xuan, Jifeng and Cornu, Benoit and Martinez, Matias and Baudry, Benoit and Seinturier, Lionel and Monperrus, Martin},
	journal = {{Information and Software Technology}},
	year = {2016},
	doi = {10.1016/j.infsof.2016.04.016},
	volume = {76},
	pages = {65-80},
	publisher = {{Elsevier}},
	url = {https://hal.archives-ouvertes.fr/hal-01309004/document},
}

@inproceedings{palikareva2016shadow,
	title={Shadow of a doubt: testing for divergences between software versions},
	author={Palikareva, Hristina and Kuchta, Tomasz and Cadar, Cristian},
	booktitle={Proceedings of the 38th International Conference on Software Engineering},
	pages={1181--1192},
	year={2016},
	organization={ACM}
}

%reference checked citers checked
@inproceedings{Baudry:2002:ATC:786769.787015,
	author = {Baudry, Benoit and Fleurey, Franck and J{\'e}z{\'e}quel, Jean-Marc and Le Traon, Yves},
	title = {Automatic Test Cases Optimization Using a Bacteriological Adaptation Model: Application to .NET Components},
	booktitle = {Proceedings of the 17th IEEE International Conference on Automated Software Engineering},
	series = {ASE '02},
	year = {2002},
	isbn = {0-7695-1736-6},
	pages = {253--},
	url = {http://dl.acm.org/citation.cfm?id=786769.787015},
	acmid = {787015},
	publisher = {IEEE Computer Society},
	address = {Washington, DC, USA},
} 

%references and citers checked
@article{Baudry05a,
	Author = {Baudry, Benoit and Fleurey, Franck and J\'ez\'equel, Jean-Marc and {Le Traon}, Yves},
	Journal = {Software, Testing, Verification \& Reliability journal {(STVR)}},
	Month = jun,
	Number = {2},
	Pages = {73-96},
	Title = {From Genetic to Bacteriological Algorithms for Mutation-Based Testing},
	url = {http://www.irisa.fr/triskell/publis/2005/Baudry05a.pdf},
	Volume = {15},
	Year = {2005},
}

@inproceedings{fraser2011evosuite,
	title={Evosuite: automatic test suite generation for object-oriented software},
	author={Fraser, Gordon and Arcuri, Andrea},
	booktitle={Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
	pages={416--419},
	year={2011},
	organization={ACM}
}

@article{BellerTSE,
	author = {Moritz Beller and Georgios Gousios and Annibale Panichella and Sebastian Proksch and Sven Amann and Andy Zaidman},
	title = {Developer Testing in The {IDE}: Patterns, Beliefs,
	And Behavior},
	journal = {IEEE Transactions on Software Engineering},
	volume    = {45},
	number    = {3},
	pages     = {261--284},
	year      = {2019},
}

@inproceedings{DBLP:conf/icst/ZaidmanRDD08,
	author    = {Andy Zaidman and
	Bart Van Rompaey and
	Serge Demeyer and
	Arie van Deursen},
	title     = {Mining Software Repositories to Study Co-Evolution of Production {\&}
	Test Code},
	booktitle = {First International Conference on Software Testing, Verification,
	and Validation ({ICST})},
	pages     = {220--229},
	year      = {2008},
	publisher = {{IEEE} Computer Society},
}

%citers checked
@article{fraser20151600,
	title={1600 faults in 100 projects: Automatically finding faults while achieving high coverage with evosuite},
	author={Fraser, Gordon and Arcuri, Andrea},
	journal={Empirical Software Engineering},
	volume={20},
	number={3},
	pages={611--639},
	year={2015},
	publisher={Springer}
}


%references checked
%citers checked
@inproceedings{qi2010test,
	title={Test generation to expose changes in evolving programs},
	author={Qi, Dawei and Roychoudhury, Abhik and Liang, Zhenkai},
	booktitle={Proceedings of the IEEE/ACM international conference on Automated software engineering},
	pages={397--406},
	year={2010},
	url={https://web.comp.nus.edu.sg/~liangzk/papers/ase10.pdf}
}

%references checked, citers checks
@inproceedings{staats2012automated,
	title={Automated oracle creation support, or: how I learned to stop worrying about fault propagation and love mutation testing},
	author={Staats, Matt and Gay, Gregory and Heimdahl, Mats PE},
	booktitle={Proceedings of the 34th International Conference on Software Engineering},
	pages={870--880},
	year={2012},
}

%references checked, citers checked 
@inproceedings{baudry2006improving,
	title={Improving test suites for efficient fault localization},
	author={Baudry, Benoit and Fleurey, Franck and Le Traon, Yves},
	booktitle={Proceedings of the 28th international conference on Software engineering},
	pages={82--91},
	year={2006},
	organization={ACM}
}

%benoit
%references checked
@inproceedings{santelices2008test,
	title={Test-suite augmentation for evolving software},
	author={Santelices, Raul and Chittimalli, Pavan Kumar and Apiwattanapong, Taweesup and Orso, Alessandro and Harrold, Mary Jean},
	booktitle={23rd IEEE/ACM International Conference on},
	pages={218--227},
	year={2008},
	organization={IEEE},
	url = {https://pdfs.semanticscholar.org/05cf/2988ea3ac5e697fc51f85e7dd2031dd8af01.pdf}
}

%citers checked
@inproceedings{xu2010directed,
	title={Directed test suite augmentation: techniques and tradeoffs},
	author={Xu, Zhihong and Kim, Yunho and Kim, Moonzoo and Rothermel, Gregg and Cohen, Myra B},
	booktitle={Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering},
	pages={257--266},
	year={2010},
	organization={ACM}
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{pezze2013,
	title={Generating effective integration test cases from unit ones},
	author={Pezze, Mauro and Rubinov, Konstantin and Wuttke, Jochen},
	booktitle={Software Testing, Verification and Validation (ICST), 2013 IEEE Sixth International Conference on},
	pages={11--20},
	year={2013},
	organization={IEEE},
	url={http://www.inf.usi.ch/phd/rubinov/pub/icst-2013-rubinov.pdf}
}

% martin checks the references (DONE) and citers (DONE)
@phdthesis{rubinov2013automatically,
	title={{Automatically generating complex test cases from simple ones}},
	author={Rubinov, Konstantin},
	year={2013},
	school={Universit{\`a} della Svizzera Italiana},
	url={https://pdfs.semanticscholar.org/c4ae/7ede910984526a581cdb9b03de7f418daf1c.pdf}
}

% martin checks the references (DONE) and citers (DONE)
@article{yoo2012,
	title={Test data regeneration: generating new test data from existing test data},
	author={Yoo, Shin and Harman, Mark},
	journal={Software Testing, Verification and Reliability},
	volume={22},
	number={3},
	pages={171--201},
	year={2012},
	publisher={Wiley Online Library},
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{milani2014,
	title={Leveraging existing tests in automated test generation for web applications},
	author={Milani Fard, Amin and Mirzaaghaei, Mehdi and Mesbah, Ali},
	booktitle={Proceedings of the 29th ACM/IEEE international conference on Automated software engineering},
	pages={67--78},
	year={2014},
	organization={ACM}
}

@article{anand2013orchestrated,
	title={An orchestrated survey of methodologies for automated software test case generation},
	author={Anand, Saswat and Burke, Edmund K and Chen, Tsong Yueh and Clark, John and Cohen, Myra B and Grieskamp, Wolfgang and Harman, Mark and Harrold, Mary Jean and Mcminn, Phil and others},
	journal={Journal of Systems and Software},
	volume={86},
	number={8},
	pages={1978--2001},
	year={2013},
	publisher={Elsevier}
}


@inproceedings{jalali2012systematic,
	title={Systematic literature studies: database searches vs. backward snowballing},
	author={Jalali, Samireh and Wohlin, Claes},
	booktitle={Proceedings of the ACM-IEEE international symposium on Empirical software engineering and measurement},
	pages={29--38},
	year={2012},
	organization={ACM}
}


% martin checks the references (DONE) and citers (DONE)
@inproceedings{Joshi07,
	author = {Joshi, Pallavi and Sen, Koushik and Shlimovich, Mark},
	title = {{Predictive Testing: Amplifying the Effectiveness of Software Testing}},
	booktitle = {Proc. of the ESEC/FSE: Companion Papers},
	series = {ESEC-FSE companion '07},
	year = {2007},
	isbn = {978-1-59593-812-1},
	location = {Dubrovnik, Croatia},
	pages = {561--564},
	numpages = {4},
	url = {http://doi.acm.org/10.1145/1295014.1295041},
	doi = {10.1145/1295014.1295041},
	acmid = {1295041},
	publisher = {ACM},
	address = {New York, NY, USA},
} 


% martin checks the references (DONE) and citers (DONE)
@article{leung12,
	title={Verifying GPU kernels by test amplification},
	author={Leung, Alan and Gupta, Manish and Agarwal, Yuvraj and Gupta, Rajesh and Jhala, Ranjit and Lerner, Sorin},
	journal={ACM SIGPLAN Notices},
	volume={47},
	number={6},
	pages={383--394},
	year={2012},
	publisher={ACM},
	url={http://synergy.ucsd.edu/yuvraj/docs/leung_pldi2012_CUDATestAmplification.pdf}
}

@book{hetzel1988,
	author = {Hetzel, William C},
	title = {The Complete Guide to Software Testing},
	year = {1988},
	isbn = {0-89435-242-3, 9780471565673},
	edition = {2nd},
	publisher = {QED Information Sciences, Inc.},
	address = {Wellesley, MA, USA},
}


% martin checks the references (DONE) and citers (DONE)
@inproceedings{Harder03,
	author = {Harder, Michael and Mellen, Jeff and Ernst, Michael D},
	title = {Improving Test Suites via Operational Abstraction},
	booktitle = {Proc. of the Int. Conf. on Software Engineering (ICSE)},
	year = {2003},
	pages = {60--71},
} 

% martin checks the references (DONE) and citers (DONE)
@article{mirzaaghaei2014automatic,
	title={Automatic test case evolution},
	author={Mirzaaghaei, Mehdi and Pastore, Fabrizio and Pezz{\`e}, Mauro},
	journal={Software Testing, Verification and Reliability},
	volume={24},
	number={5},
	pages={386--411},
	year={2014},
	publisher={Wiley Online Library}
}


% martin has checked
@article{memon2008automatically,
	title={Automatically repairing event sequence-based GUI test suites for regression testing},
	author={Memon, Atif M},
	journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
	volume={18},
	number={2},
	pages={4},
	year={2008},
	publisher={ACM}
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{fraser2011generating,
	title={Generating parameterized unit tests},
	author={Fraser, Gordon and Zeller, Andreas},
	booktitle={Proceedings of the 2011 International Symposium on Software Testing and Analysis},
	pages={364--374},
	year={2011},
	organization={ACM}
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{santelices2011applying,
	title={Applying aggressive propagation-based strategies for testing changes},
	author={Santelices, Raul and Harrold, Mary Jean},
	booktitle={IEEE Fourth International Conference on Software Testing, Verification and Validation},
	pages={11--20},
	year={2011},
	organization={IEEE}
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{xu2011hybrid,
	title={A hybrid directed test suite augmentation technique},
	author={Xu, Zhihong and Kim, Yunho and Kim, Moonzoo and Rothermel, Gregg},
	booktitle={Software Reliability Engineering (ISSRE), 2011 IEEE 22nd International Symposium on},
	pages={150--159},
	year={2011},
	organization={IEEE},
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{xu2009directed,
	title={Directed test suite augmentation},
	author={Xu, Zhihong and Rothermel, Gregg},
	booktitle={Software Engineering Conference, 2009. APSEC'09. Asia-Pacific},
	pages={406--413},
	year={2009},
	organization={IEEE}
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{Yoshida2016,
	author = {Yoshida, Hiroaki and Tokumoto, Susumu and Prasad, Mukul R and Ghosh, Indradeep and Uehara, Tadahiro},
	title = {{FSX: Fine-grained Incremental Unit Test Generation for C/C++ Programs}},
	booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
	series = {ISSTA 2016},
	year = {2016},
} 

% martin checks the references (DONE) and citers (DONE)
@inproceedings{Xie2006,
	author = {Xie, Tao},
	title = {{Augmenting Automatically Generated Unit-test Suites with Regression Oracle Checking}},
	booktitle = {Proceedings of the 20th European Conference on Object-Oriented Programming},
	year = {2006},
	pages = {380--403},
} 

% martin checks the references (DONE) and citers (DONE)
@inproceedings{Dallmeier2010,
	author = {Dallmeier, Valentin and Knopp, Nikolai and Mallon, Christoph and Hack, Sebastian and Zeller, Andreas},
	title = {Generating Test Cases for Specification Mining},
	booktitle = {Proceedings of the 19th International Symposium on Software Testing and Analysis},
	series = {ISSTA '10},
	year = {2010},
	isbn = {978-1-60558-823-0},
	location = {Trento, Italy},
	pages = {85--96},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/1831708.1831719},
	doi = {10.1145/1831708.1831719},
	acmid = {1831719},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {specification mining, test case generation, typestate analysis},
	url={https://www.st.cs.uni-saarland.de/models/tautoko/downloads/issta10.pdf}
}

% zhongxing, references checked
@techreport{marri2010retrofitting,
	title={Retrofitting unit tests for parameterized unit testing},
	author={Marri, Madhuri R and Thummalapenta, Suresh and Xie, Tao and Tillmann, Nikolai and de Halleux, Jonathan},
	year={2010},
	institution={North Carolina State University}
}

% seems that this the correct reference for marri2010retrofitting
@inproceedings{thummalapenta2011retrofitting,
	title={Retrofitting unit tests for parameterized unit testing},
	author={Thummalapenta, Suresh and Marri, Madhuri R and Xie, Tao and Tillmann, Nikolai and de Halleux, Jonathan},
	booktitle={International Conference on Fundamental Approaches to Software Engineering},
	pages={294--309},
	year={2011},
	organization={Springer}
}

% zhongxing, references checked
@article{tillmann2006unit,
	title={Unit tests reloaded: Parameterized unit testing with symbolic execution},
	author={Tillmann, Nikolai and Schulte, Wolfram},
	journal={IEEE software},
	volume={23},
	number={4},
	pages={38--47},
	year={2006},
	publisher={IEEE}
}

% zhongxing, references checked
@inproceedings{jahangirova2016test,
	title={Test oracle assessment and improvement},
	author={Jahangirova, Gunel and Clark, David and Harman, Mark and Tonella, Paolo},
	booktitle={Proceedings of the 25th International Symposium on Software Testing and Analysis},
	pages={247--258},
	year={2016},
	organization={ACM}
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{bohme2013regression,
	title={Regression tests to expose change interaction errors},
	author={B{\"o}hme, Marcel and Oliveira, Bruno C d S and Roychoudhury, Abhik},
	booktitle={Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
	pages={334--344},
	year={2013},
	organization={ACM},
	url={https://www-new.comp.nus.edu.sg/~abhik/pdf/fse13.pdf}
}

% martin checks the references (DONE) and citers (DONE)
@article{xu2015directed,
	title={Directed test suite augmentation: an empirical investigation},
	author={Xu, Zhihong and Kim, Yunho and Kim, Moonzoo and Cohen, Myra B and Rothermel, Gregg},
	journal={Software Testing, Verification and Reliability},
	volume={25},
	number={2},
	pages={77--114},
	year={2015},
}



% martin checks the references (DONE) and citers (DONE)
@article{Yu2013,
	author = {Yu, Zhongxing and Bai, Chenggang and Cai, Kai-Yuan},
	journal = {Inf. Softw. Technol.},
	issue_date = {December, 2013},
	volume = {55},
	number = {12},
	month = dec,
	year = {2013},
	issn = {0950-5849},
	pages = {2076--2098},
	numpages = {23},
}

% This seems to be duplicated. See baudry2006improving
% martin checks the references (DONE) and citers (DONE too many of them :-))
@inproceedings{Baudry:2006:ITS:1134285.1134299,
	author = {Baudry, Benoit and Fleurey, Franck and Le Traon, Yves},
	title = {Improving Test Suites for Efficient Fault Localization},
	booktitle = {Proceedings of the 28th International Conference on Software Engineering},
	series = {ICSE '06},
	year = {2006},
	isbn = {1-59593-375-1},
	pages = {82--91},
} 

% workshop papers
% martin checks the references (DONE) and citers (DONE)
@inproceedings{xwang2014directed,
	title={Directed test suite augmentation via exploiting program dependency},
	author={Wang, Haijun and Guan, Xiaohong and Zheng, Qinghua and Liu, Ting and Shen, Chao and Yang, Zijiang},
	booktitle={Proceedings of the 6th International Workshop on Constraints in Software Testing, Verification, and Analysis},
	pages={1--6},
	year={2014},
	organization={ACM},
	url={}
}

% the only related survey but a very small one
@inproceedings{harrold2008retesting,
	title={Retesting software during development and maintenance},
	author={Harrold, Mary J and Orso, Alessandro},
	booktitle={Frontiers of Software Maintenance, 2008. FoSM 2008.},
	pages={99--108},
	year={2008},
}

% very boring paper, out of scope
@article{yusifouglu2015software,
	title={Software test-code engineering: A systematic mapping},
	author={Yusifo{\u{g}}lu, Vahid Garousi and Amannejad, Yasaman and Can, Aysu B},
	journal={Information and Software Technology},
	volume={58},
	pages={123--147},
	year={2015},
	publisher={Elsevier}
}

@article{Brereton2007,
	author    = {Pearl Brereton and
	Barbara A. Kitchenham and
	David Budgen and
	Mark Turner and
	Mohamed Khalil},
	title     = {Lessons from applying the systematic literature review process within
	the software engineering domain},
	journal   = {Journal of Systems and Software},
	volume    = {80},
	number    = {4},
	pages     = {571--583},
	year      = {2007},
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{reassert2009,
	author={Daniel, Brett and Jagannath, Vilas and Dig, Danny and Marinov, Darko},
	booktitle={2009 IEEE/ACM International Conference on Automated Software Engineering},
	title={ReAssert: Suggesting Repairs for Broken Unit Tests},
	year={2009},
	pages={433-444},
}

% martin checks the references (DONE) and citers (DONE)
@article{Patrick201736,
	title = {KD-ART: Should we intensify or diversify tests to kill mutants?},
	author = {Matthew Patrick and Yue Jia},
	journal = {Information and Software Technology},
	volume = {81},
	pages = {36--51},
	year = {2017},
}

% out of scope
%TODO: Then why is it here?
@inproceedings{mondal2015exploring,
	title={Exploring test suite diversification and code coverage in multi-objective test case selection},
	author={Mondal, Debajyoti and Hemmati, Hadi and Durocher, Stephane},
	booktitle={IEEE 8th International Conference on Software Testing, Verification and Validation},
	pages={1--10},
	year={2015},
	organization={IEEE}
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{xu2010factors,
	title={Factors affecting the use of genetic algorithms in test suite augmentation},
	author={Xu, Zhihong and Cohen, Myra B and Rothermel, Gregg},
	booktitle={Proceedings of the 12th annual conference on Genetic and evolutionary computation},
	pages={1365--1372},
	year={2010},
	organization={ACM}
}

% out of scope, related to qi2010
%TODO: Then why is it here?
@inproceedings{apiwattanapong2006matrix,
	title={Matrix: Maintenance-oriented testing requirements identifier and examiner},
	author={Apiwattanapong, Taweesup and Santelices, Raul and Chittimalli, Pavan Kumar and Orso, Alessandro and Harrold, Mary Jean},
	booktitle={Testing: Academic and Industrial Conference-Practice And Research Techniques, 2006. TAIC PART 2006. Proceedings},
	pages={137--146},
	year={2006},
	organization={IEEE}
}


%out of scope
@inproceedings{Jin:2010:ABR:1828417.1828455,
	author = {Jin, Wei and Orso, Alessandro and Xie, Tao},
	title = {Automated Behavioral Regression Testing},
	booktitle = {Proceedings of the 2010 Third International Conference on Software Testing, Verification and Validation},
	series = {ICST '10},
	year = {2010},
	pages = {137--146},
} 

%out of scope
@inproceedings{6571658,
	title={Search-based propagation of regression faults in automated regression testing},
	author={Shamshiri, Sina and Fraser, Gordon and Mcminn, Phil and Orso, Alessandro},
	booktitle={Software Testing, Verification and Validation Workshops (ICSTW), 2013 IEEE Sixth International Conference on},
	pages={396--399},
	year={2013},
	organization={IEEE}
}

% martin checks the references (DONE) and citers (DONE)
@inproceedings{Mirzaaghaei2012,
	title={Supporting test suite evolution through test case adaptation},
	author={Mirzaaghaei, Mehdi and Pastore, Fabrizio and Pezze, Mauro},
	booktitle={Software Testing, Verification and Validation (ICST), 2012 IEEE Fifth International Conference on},
	pages={231--240},
	year={2012},
	organization={IEEE}
}


% martin checks the references (DONE) and citers (DONE)
@article {STVR:STVR4370020405,
	author = {Korel, Bogdan},
	title = {Dynamic method for software test data generation},
	journal = {Software Testing, Verification and Reliability},
	volume = {2},
	number = {4},
	publisher = {John Wiley \& Sons, Ltd},
	issn = {1099-1689},
	url = {http://dx.doi.org/10.1002/stvr.4370020405},
	doi = {10.1002/stvr.4370020405},
	pages = {203--213},
	year = {1992},
}

% no check, no core paper
@article{6019060,
	title={Mutation-driven generation of unit tests and oracles},
	author={Fraser, Gordon and Zeller, Andreas},
	journal={IEEE Transactions on Software Engineering},
	volume={38},
	number={2},
	pages={278--292},
	year={2012},
	publisher={IEEE}
}

% martin checks the references (DONE) and citers (DONE
@inproceedings{Xuan:2015:CRV:2786805.2803206,
	author = {Xuan, Jifeng and Xie, Xiaoyuan and Monperrus, Martin},
	title = {{Crash Reproduction via Test Case Mutation: Let Existing Test Cases Help}},
	booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	series = {ESEC/FSE 2015},
	year = {2015},
	isbn = {978-1-4503-3675-8},
	location = {Bergamo, Italy},
	pages = {910--913},
	numpages = {4},
	url = {http://doi.acm.org/10.1145/2786805.2803206},
	doi = {10.1145/2786805.2803206},
	acmid = {2803206},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Crash reproduction, stack trace, test case mutation},
} 

% martin checks the references (DONE) and citers (DONE
@inproceedings{Carzaniga:2014:COI:2568225.2568287,
	author = {Carzaniga, Antonio and Goffi, Alberto and Gorla, Alessandra and Mattavelli, Andrea and Pezz\`{e}, Mauro},
	title = {{Cross-checking Oracles from Intrinsic Software Redundancy}},
	booktitle = {Proceedings of the 36th International Conference on Software Engineering},
	series = {ICSE 2014},
	year = {2014},
	isbn = {978-1-4503-2756-5},
	pages = {931--942},
} 

% no need to checks citers (associated ref)
@inproceedings{Pacheco2005,
	title={Eclat: Automatic generation and classification of test inputs},
	author={Pacheco, Carlos and Ernst, Michael D},
	booktitle={Proceedings of the 19th European conference on Object-Oriented Programming},
	pages={504--527},
	year={2005},
	organization={Springer-Verlag},
	publisher={Springer Berlin Heidelberg},
	address={Berlin, Heidelberg},
	isbn={978-3-540-31725-8}
}

% no need to checks citers (associated ref)
@article{xuanTSE2016Nopol,
	title={Nopol: Automatic repair of conditional statement bugs in java programs},
	author={Xuan, Jifeng and Martinez, Matias and DeMarco, Favio and Clement, Maxime and Marcote, Sebastian Lamelas and Durieux, Thomas and Le Berre, Daniel and Monperrus, Martin},
	journal={IEEE Transactions on Software Engineering},
	volume={43},
	number={1},
	pages={34--55},
	year={2017},
	publisher={IEEE}
}

% martin checks the references (DONE) and citers (DONE)  no citers :-), the paper is too receent)
@inproceedings{Zhang2016Isomorphic,
	author = {Zhang, Jie and Lou, Yiling and Zhang, Lingming and Hao, Dan and Zhang, Lu and Mei, Hong},
	title = {Isomorphic Regression Testing: Executing Uncovered Branches Without Test Augmentation},
	booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
	series = {FSE 2016},
	year = {2016},
	isbn = {978-1-4503-4218-6},
	location = {Seattle, WA, USA},
	pages = {883--894},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/2950290.2950313},
	doi = {10.1145/2950290.2950313},
	acmid = {2950313},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {branch negation, regression testing, software testing},
}

% checked
@article{cornu2015exception,
	Author = {Cornu, Benoit and Seinturier, Lionel and Monperrus, Martin},
	Date-Added = {2017-03-24 09:16:54 +0000},
	Date-Modified = {2017-03-24 09:16:54 +0000},
	Journal = {Information and Software Technology},
	Pages = {66--76},
	Publisher = {Elsevier},
	Title = {Exception handling analysis and transformation using fault injection: Study of resilience against unanticipated exceptions},
	Volume = {57},
	Year = {2015}
}

%% The following two seem to be out of scope, they seems to be a test generation technique according to observed changes in different versions of the program more than enhancing or augmenting the test suite
@inproceedings{taneja2011express,
	title={eXpress: guided path exploration for efficient regression test generation},
	author={Taneja, Kunal and Xie, Tao and Tillmann, Nikolai and de Halleux, Jonathan},
	booktitle={Proceedings of the 2011 International Symposium on Software Testing and Analysis},
	pages={1--11},
	year={2011},
	organization={ACM}
}
%% Idem as the previous one
@inproceedings{taneja2009guided,
	title={Guided path exploration for regression test generation},
	author={Taneja, Kunal and Xie, Tao and Tillmann, Nikolai and De Halleux, Jonathan and Schulte, Wolfram},
	booktitle={Software Engineering-Companion Volume, 2009. ICSE-Companion 2009. 31st International Conference on},
	pages={311--314},
	year={2009},
	organization={IEEE}
}

% citers OK
@article{yoo2012survey,
	title={Regression testing minimization, selection and prioritization: a survey},
	author={Yoo, Shin and Harman, Mark},
	journal={Software Testing, Verification and Reliability},
	volume={22},
	number={2},
	pages={67--120},
	year={2012},
	publisher={Wiley Online Library}
}

% citers done
@article{puasuareanu2009survey,
	title={{A survey of new trends in symbolic execution for software testing and analysis}},
	author={P{\u{a}}s{\u{a}}reanu, Corina S and Visser, Willem},
	journal={International Journal on Software Tools for Technology Transfer (STTT)},
	volume={11},
	number={4},
	pages={339--353},
	year={2009},
	publisher={Springer}
}

@misc{SIR,
	title = {Software-artifact Infrastructure Repository},
	howpublished = {\url{http://sir.unl.edu}},
	note = {Accessed: 2017-05-17}
}

@inproceedings{Mouelhi:2009,
	title={Transforming and selecting functional test cases for security policy testing},
	author={Mouelhi, Tejeddine and Le Traon, Yves and Baudry, Benoit},
	booktitle={Software Testing Verification and Validation, 2009. ICST'09. International Conference on},
	pages={171--180},
	year={2009},
	organization={IEEE}
}

@inproceedings{Yu:2015:TACO,
	author = {Yu, Tingting},
	title = {TACO: Test Suite Augmentation for Concurrent Programs},
	booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	series = {ESEC/FSE 2015},
	year = {2015},
	isbn = {978-1-4503-3675-8},
	location = {Bergamo, Italy},
	pages = {918--921},
	numpages = {4},
	url = {http://doi.acm.org/10.1145/2786805.2803201},
	doi = {10.1145/2786805.2803201},
	acmid = {2803201},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Concurrency, Regression Testing},
}

@inproceedings{6958388,
	title={Automating test-suite augmentation},
	author={Bloem, Roderick and Koenighofer, Robert and R{\"o}ck, Franz and Tautschnig, Michael},
	booktitle={Quality Software (QSIC), 2014 14th International Conference on},
	pages={67--72},
	year={2014},
	organization={IEEE}
}

@article{Baudry05d,
	keywords = {test, OOP, search-based},
	Author = {Baudry, Benoit and Fleurey, Franck and J\'ez\'equel, Jean-Marc and {Le~Traon}, Yves},
	Journal = {IEEE Software},
	Month = mar,
	Number = {2},
	Pages = {76--82},
	Title = {Automatic Test Cases Optimization: a Bacteriologic Algorithm},
	url = {http://www.irisa.fr/triskell/publis/2005/Baudry05d.pdf},
	Volume = {22},
	x-abbrv = {Software},
	X-Editorial-Board = {yes},
	X-International-Audience = {yes},
	X-Language = {EN},
	Year = {2005},
	Bdsk-Url-1 = {http://www.irisa.fr/triskell/publis/2005/Baudry05d.pdf}
}

@article{mala2010automated,
	title={Automated software test optimisation framework-an artificial bee colony optimisation-based approach},
	author={Mala, D Jeya and Mohan, V and Kamalapriya, M},
	journal={IET software},
	volume={4},
	number={5},
	pages={334--348},
	year={2010},
	publisher={IET}
}

@inproceedings{robetaler2012isolating,
	title={Isolating failure causes through test case generation},
	author={R{\"o}$\beta$ler, Jeremias and Fraser, Gordon and Zeller, Andreas and Orso, Alessandro},
	booktitle={Proceedings of the 2012 International Symposium on Software Testing and Analysis},
	pages={309--319},
	year={2012},
	organization={ACM}
}

@inproceedings{bohme2014corebench,
	title={Corebench: Sbohme2014corebenchtudying complexity of regression errors},
	author={B{\"o}hme, Marcel and Roychoudhury, Abhik},
	booktitle={Proceedings of the 2014 International Symposium on Software Testing and Analysis},
	pages={105--115},
	year={2014},
	organization={ACM}
}

@inproceedings{marinescu2013katch,
	title = {{KATCH}: high-coverage testing of software patches},
	isbn = {978-1-4503-2237-9},
	shorttitle = {{KATCH}},
	url = {http://dl.acm.org/citation.cfm?doid=2491411.2491438},
	doi = {10.1145/2491411.2491438},
	language = {en},
	urldate = {2017-04-28},
	publisher = {ACM Press},
	author = {Marinescu, Paul Dan and Cadar, Cristian},
	year = {2013},
	pages = {235}
}

% survey reference from review
@article{GAROUSIYUSIFOGLU2015123,
	title = "Software test-code engineering: A systematic mapping",
	journal = "Information and Software Technology",
	volume = "58",
	pages = "123 - 147",
	year = "2015",
	issn = "0950-5849",
	doi = "https://doi.org/10.1016/j.infsof.2014.06.009",
	url = "http://www.sciencedirect.com/science/article/pii/S0950584914001487",
	author = "Vahid Garousi Yusifoğlu and Yasaman Amannejad and Aysu Betin Can",
	keywords = "Systematic mapping, Survey, Study repository, Software test-code engineering, Development of test code, Quality assessment of test code"
}

@inproceedings{DaCapo,
	author = {Blackburn, Stephen M. and Garner, Robin and Hoffmann, Chris and Khang, Asjad M. and McKinley, Kathryn S. and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z. and Hirzel, Martin and Hosking, Antony and Jump, Maria and Lee, Han and Moss, J. Eliot B. and Phansalkar, Aashish and Stefanovi\'{c}, Darko and VanDrunen, Thomas and von Dincklage, Daniel and Wiedermann, Ben},
	title = {The DaCapo Benchmarks: Java Benchmarking Development and Analysis},
	booktitle = {Proceedings of the 21st Annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, and Applications},
	series = {OOPSLA '06},
	year = {2006},
	isbn = {1-59593-348-4},
	location = {Portland, Oregon, USA},
	pages = {169--190},
	numpages = {22},
	url = {http://doi.acm.org/10.1145/1167473.1167488},
	doi = {10.1145/1167473.1167488},
	acmid = {1167488},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {DaCapo, Java, SPEC, benchmark, methodology},
}

@inproceedings{hutchins1994experiments,
	author = {Hutchins, Monica and Foster, Herb and Goradia, Tarak and Ostrand, Thomas},
	title = {Experiments of the Effectiveness of Dataflow- and Controlflow-based Test Adequacy Criteria},
	booktitle = {Proceedings of the 16th International Conference on Software Engineering},
	series = {ICSE '94},
	year = {1994},
	isbn = {0-8186-5855-X},
	location = {Sorrento, Italy},
	pages = {191--200},
	numpages = {10},
	url = {http://dl.acm.org/citation.cfm?id=257734.257766},
	acmid = {257766},
	publisher = {IEEE Computer Society Press},
	address = {Los Alamitos, CA, USA},
} 

@inproceedings{Rinard:2005:EAE:1094855.1094866,
	author = {Rinard, Martin and Cadar, Cristian and Nguyen, Huu Hai},
	title = {Exploring the Acceptability Envelope},
	booktitle = {Companion to the 20th Annual ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
	series = {OOPSLA '05},
	year = {2005},
	isbn = {1-59593-193-7},
	location = {San Diego, CA, USA},
	pages = {21--30},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/1094855.1094866},
	doi = {10.1145/1094855.1094866},
	acmid = {1094866},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {acceptability-oriented computing, failure-oblivious computing},
}

@INPROCEEDINGS{Li2007Correctness,
	author={X. Li and D. Yeung},
	booktitle={2007 IEEE 13th International Symposium on High Performance Computer Architecture},
	title={Application-Level Correctness and its Impact on Fault Tolerance},
	year={2007},
	pages={181-192},
	keywords={program verification;software architecture;software fault tolerance;software metrics;application-level correctness;application-level fidelity metrics;artificial intelligence workloads;enhanced fault resilience;error resilience;fault recovery mechanism;fault tolerance;multimedia workloads;program correctness;programs soft computation;user satisfaction;user-perceived program solution quality;Artificial intelligence;Computer architecture;Costs;Educational institutions;Engineering profession;Error correction;Fault tolerance;Government;Hardware;Resilience},
	doi={10.1109/HPCA.2007.346196},
	ISSN={1530-0897},
	month={Feb},
}

@inproceedings{niedermayr_will_2016,
	title = {Will my tests tell me if {I} break this code?},
	isbn = {978-1-4503-4157-8},
	url = {http://dl.acm.org/citation.cfm?doid=2896941.2896944},
	doi = {10.1145/2896941.2896944},
	language = {en},
	urldate = {2017-01-05},
	booktitle = {Proceedings of the {International} {Workshop} on {Continuous} {Software} {Evolution} and {Delivery}},
	publisher = {ACM Press},
	address = {New York, NY, USA},
	author = {Niedermayr, Rainer and Juergens, Elmar and Wagner, Stefan},
	year = {2016},
	pages = {23--29}	
}

@inproceedings{coles_pit_2016,
	address = {New York, NY, USA},
	series = {{ISSTA} 2016},
	title = {{PIT}: {A} {Practical} {Mutation} {Testing} {Tool} for {Java} ({Demo})},
	isbn = {978-1-4503-4390-9},
	shorttitle = {{PIT}},
	url = {http://doi.acm.org/10.1145/2931037.2948707},
	doi = {10.1145/2931037.2948707},
	booktitle = {Proceedings of the 25th {International} {Symposium} on {Software} {Testing} and {Analysis}},
	publisher = {ACM},
	author = {Coles, Henry and Laurent, Thomas and Henard, Christopher and Papadakis, Mike and Ventresque, Anthony},
	year = {2016},
	keywords = {Automated Tool, mutation testing, PIT},
	pages = {449--452}
}

@inproceedings{veraperez2018descartes,
	title	= {Descartes: A PITest Engine to Detect Pseudo-Tested Methods},
	author	= {Oscar L. Vera-P\'erez  and Martin Monperrus and Benoit Baudry},
	year	= {2018},
	booktitle	= {Proceedings of the 2018 33rd ACM/IEEE International Conference on Automated
	Software Engineering (ASE ’18)},
	doi	= {10.1145/3238147.3240474},
	pages	= {908--911}
}

@article{genprog,
	author    = {Claire Le Goues and
	ThanhVu Nguyen and
	Stephanie Forrest and
	Westley Weimer},
	title     = {GenProg: A Generic Method for Automatic Software Repair},
	journal   = {IEEE Trans. Software Eng.},
	volume    = {38},
	number    = {1},
	year      = {2012},
	pages     = {54-72},
	ee        = {http://doi.ieeecomputersociety.org/10.1109/TSE.2011.104},
	bibsource = {DBLP, http://dblp.uni-trier.de}
}

@INPROCEEDINGS{semfix, 
	author = {Nguyen, Hoang Duong Thien and Qi, Dawei and Roychoudhury, Abhik and Chandra, Satish},
	title = {SemFix: Program Repair via Semantic Analysis},
	booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
	series = {ICSE '13},
	year = {2013},
	isbn = {978-1-4673-3076-3},
	location = {San Francisco, CA, USA},
	pages = {772--781},
	numpages = {10},
	url = {http://dl.acm.org/citation.cfm?id=2486788.2486890},
	acmid = {2486890},
	publisher = {IEEE Press},
	address = {Piscataway, NJ, USA},
}

@article{nopol,
	title = {Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs},
	author = {Xuan, Jifeng and Martinez, Matias and Demarco, Favio and Clément, Maxime and Lamelas, Sebastian and Durieux, Thomas and Le Berre, Daniel and Monperrus, Martin},
	url = {https://hal.archives-ouvertes.fr/hal-01285008/document},
	journal = {IEEE Transactions on Software Engineering},
	year = {2016},
	doi = {10.1109/TSE.2016.2560811},
}

@ARTICLE{tsepei,
	author={Y. Pei and C. A. Furia and M. Nordio and Y. Wei and B. Meyer and A. Zeller},
	journal={IEEE Transactions on Software Engineering},
	title={Automated Fixing of Programs with Contracts},
	year={2014},
	volume={40},
	number={5},
	pages={427-449},
	keywords={contracts;fault diagnosis;program debugging;program diagnostics;software tools;AutoFix approach;AutoFix supporting tool;automated program fixing;automatic debugging technique;commodity hardware;computational resources;contracts;debugging process;dynamic analysis techniques;fault detection;fault localization;general-purpose software fault fixing;high-quality fix suggestions;Automation;Contracts;Debugging;Indexes;Libraries;Software;Software engineering;Automatic program repair;contracts;dynamic analysis},
	doi={10.1109/TSE.2014.2312918},
	ISSN={0098-5589},
	month={May},
}

@inproceedings{long2017automatic,
	title={Automatic inference of code transforms for patch generation},
	author={Long, Fan and Amidon, Peter and Rinard, Martin},
	booktitle={Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	pages={727--739},
	year={2017},
	organization={ACM}
}

@inproceedings{JustJE2014,
	author = {Ren{\'e} Just and Darioush Jalali and Michael D. Ernst},
	title = {{Defects4J}: A database of existing faults to enable
	controlled testing studies for {J}ava programs},
	booktitle = {Proceedings of the International Symposium on Software
	Testing and Analysis (ISSTA)},
	pages = {437--440},
	address = {San Jose, CA, USA},
	month = {July~23--25},
	year = {2014}
}

@inproceedings{Mechtaev:2016:ASM:2884781.2884807,
	author = {Mechtaev, Sergey and Yi, Jooyong and Roychoudhury, Abhik},
	title = {Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis},
	booktitle = {Proceedings of the 38th International Conference on Software Engineering},
	series = {ICSE '16},
	year = {2016},
	isbn = {978-1-4503-3900-1},
	location = {Austin, Texas},
	pages = {691--701},
	numpages = {11},
	url = {http://doi.acm.org/10.1145/2884781.2884807},
	doi = {10.1145/2884781.2884807},
	acmid = {2884807},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {angelic forest, multiline patch, program repair, scalable semantics-based repair},
}

@inproceedings{smith2015cure,
	title={Is the cure worse than the disease? overfitting in automated program repair},
	author={Smith, Edward K and Barr, Earl T and Le Goues, Claire and Brun, Yuriy},
	booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	pages={532--543},
	year={2015},
	organization={ACM}
}

@article{DBLP:journals/corr/abs-1809-05193,
	author    = {Rohan Bavishi and
	Michael Pradel and
	Koushik Sen},
	title     = {Context2Name: {A} Deep Learning-Based Approach to Infer Natural Variable
	Names from Usage Contexts},
	journal   = {CoRR},
	volume    = {abs/1809.05193},
	year      = {2018},
	url       = {http://arxiv.org/abs/1809.05193},
	archivePrefix = {arXiv},
	eprint    = {1809.05193},
	timestamp = {Fri, 05 Oct 2018 11:34:52 +0200},
	biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1809-05193},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/corr/abs-1803-09473,
	author    = {Uri Alon and
	Meital Zilberstein and
	Omer Levy and
	Eran Yahav},
	title     = {code2vec: Learning Distributed Representations of Code},
	journal   = {CoRR},
	volume    = {abs/1803.09473},
	year      = {2018},
	url       = {http://arxiv.org/abs/1803.09473},
	archivePrefix = {arXiv},
	eprint    = {1803.09473},
	timestamp = {Mon, 13 Aug 2018 16:47:34 +0200},
	biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1803-09473},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Rosen:2015:FSE,
	author = {Rosen, Christoffer and Grawi, Ben and Shihab, Emad},
	title = {Commit Guru: Analytics and Risk Prediction of Software Commits},
	booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	series = {ESEC/FSE 2015},
	year = {2015},
	isbn = {978-1-4503-3675-8},
	location = {Bergamo, Italy},
	pages = {966--969},
	numpages = {4},
	url = {http://doi.acm.org/10.1145/2786805.2803183},
	doi = {10.1145/2786805.2803183},
	acmid = {2803183},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Risky Software Commits, Software Analytics, Software Metrics, Software Prediction},
} 

@article{DANGLOT2019110398,
	title = "A Snowballing Literature Study on Test Amplification",
	journal = "Journal of Systems and Software",
	pages = "110398",
	year = "2019",
	issn = "0164-1212",
	doi = "https://doi.org/10.1016/j.jss.2019.110398",
	url = "http://www.sciencedirect.com/science/article/pii/S0164121219301736",
	author = "Benjamin Danglot and Oscar Vera-Perez and Zhongxing Yu and Andy Zaidman and Martin Monperrus and Benoit Baudry",
	keywords = "Test amplification, Test augmentation, Test optimization, Test regeneration, Automatic testing",
	abstract = "The adoption of agile approaches has put an increased emphasis on testing, resulting in extensive test suites. These suites include a large number of tests, in which developers embed knowledge about meaningful input data and expected properties as oracles. This article surveys works that exploit this knowledge to enhance manually written tests with respect to an engineering goal (e.g., improve coverage or refine fault localization). While these works rely on various techniques and address various goals, we believe they form an emerging and coherent field of research, which we coin “test amplification”. We devised a first set of papers from DBLP, searching for all papers containing ”test” and ”amplification” in their title. We reviewed the 70 papers in this set and selected the 4 papers that fit the definition of test amplification. We use them as the seeds for our snowballing study, and systematically followed the citation graph. This study is the first that draws a comprehensive picture of the different engineering goals proposed in the literature for test amplification. We believe that this survey will help researchers and practitioners entering this new field to understand more quickly and more deeply the intuitions, concepts and techniques used for test amplification."
}

@inproceedings{urli:hal-01691496,
	title = {How to Design a Program Repair Bot? Insights from the Repairnator Project},
	author = {Urli, Simon and Yu, Zhongxing and Seinturier, Lionel and Monperrus, Martin},
	url = {https://hal.inria.fr/hal-01691496/file/SEIP_63_Camera-Ready-no-copyright.pdf},
	booktitle = {{40th International Conference on Software Engineering, Track Software Engineering in Practice}},
	pages = {95-104},
	year = {2018},
	doi = {10.1145/3183519.3183540},
}

@article{test:data:generation:survey:McMinn,
    author = {McMinn, Phil},
    title = {Search-based software test data generation: a survey},
    journal = {Software Testing, Verification and Reliability},
    volume = {14},
    number = {2},
    pages = {105-156},
    keywords = {search-based software engineering, automated software test data generation, evolutionary testing, metaheuristic search, evolutionary algorithms, simulated annealing},
    doi = {10.1002/stvr.294},
    url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/stvr.294},
    eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/stvr.294},
    abstract = {Abstract The use of metaheuristic search techniques for the automatic generation of test data has been a burgeoning interest for many researchers in recent years. Previous attempts to automate the test generation process have been limited, having been constrained by the size and complexity of software, and the basic fact that, in general, test data generation is an undecidable problem. Metaheuristic search techniques offer much promise in regard to these problems. Metaheuristic search techniques are high-level frameworks, which utilize heuristics to seek solutions for combinatorial problems at a reasonable computational cost. To date, metaheuristic search techniques have been applied to automate test data generation for structural and functional testing; the testing of grey-box properties, for example safety constraints; and also non-functional properties, such as worst-case execution time. This paper surveys some of the work undertaken in this field, discussing possible new future directions of research for each of its different individual areas. Copyright © 2004 John Wiley \& Sons, Ltd.},
    year = {2004}
}

@article{Edvardsson:Survey:Test:Data:Generation,
    author = {Edvardsson, Jon},
    year = {2002},
    month = {03},
    pages = {},
    title = {A Survey on Automatic Test Data Generation}
}

@InProceedings{10.1007/978-3-540-28644-8_3,
    author="Abdulla, Parosh Aziz
    and Jonsson, Bengt
    and Nilsson, Marcus
    and Saksena, Mayank",
    editor="Gardner, Philippa
    and Yoshida, Nobuko",
    title="A Survey of Regular Model Checking",
    booktitle="CONCUR 2004 - Concurrency Theory",
    year="2004",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="35--48",
    abstract="Regular model checking is being developed for algorithmic verification of several classes of infinite-state systems whose configurations can be modeled as words over a finite alphabet. Examples include parameterized systems consisting of an arbitrary number of homogeneous finite-state processes connected in a linear or ring-formed topology, and systems that operate on queues, stacks, integers, and other linear data structures. The main idea is to use regular languages as the representation of sets of configurations, and finite-state transducers to describe transition relations. In general, the verification problems considered are all undecidable, so the work has consisted in developing semi-algorithms, and decidability results for restricted cases. This paper provides a survey of the work that has been performed so far, and some of its applications.",
    isbn="978-3-540-28644-8"
}

@ARTICLE{4544862, 
    author={V. {D'Silva} and D. {Kroening} and G. {Weissenbacher}}, 
    journal={IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems}, 
    title={A Survey of Automated Techniques for Formal Software Verification}, 
    year={2008}, 
    volume={27}, 
    number={7}, 
    pages={1165-1178}, 
    keywords={electronic engineering computing;program diagnostics;program verification;automated techniques;formal software verification;electronic systems;formal verification tools;automatic static analysis;programming error detection;abstract domains;bounded model checking;Software quality;Automatic testing;Formal verification;Hardware;Software systems;Software algorithms;Performance analysis;Algorithm design and analysis;Software performance;Automatic programming;Bounded model checking (BMC);model checking;predicate abstraction;software verification;static analysis}, 
    doi={10.1109/TCAD.2008.923410}, 
    ISSN={0278-0070}, 
    month={July}
}